{
	"info": {
		"_postman_id": "703f1a34-f389-4e0c-820d-df6a3e697989",
		"name": "BetterWorksPublicAPI",
		"description": "BetterWorks API",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "conversations",
			"item": [
				{
					"name": "conversation List",
					"item": [
						{
							"name": "Get a list of conversations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "80545806-d1ae-4bcc-b15f-0d06bd331915",
										"exec": [
											"",
											"",
											"//Set collection veriabled from response",
											"pm.test(\"Store values in collection variable\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"conversation_uuid\", jsonData.results[0].uuid)",
											"    pm.environment.set(\"conversation_id\", jsonData.results[0].id);",
											"    pm.environment.set(\"conversation_deployment_id\", jsonData.results[0].deployment_id);",
											"    pm.environment.set(\"conversation_name\", jsonData.results[0].name);",
											"    pm.environment.set(\"coneversation_manager_id\", jsonData.results[0].manager.id);",
											"    pm.environment.set(\"conversation_employee_id\", jsonData.results[0].employee.id);",
											"    pm.environment.set(\"conversation_delta_end\", jsonData.results[0].end);",
											"    pm.environment.set(\"conversation_delta_start\", jsonData.results[0].start);",
											"});",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "cfef0eb0-95fb-47c6-b3cb-6a410e311602",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/conversations/?page=1&size=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"conversations",
										""
									],
									"query": [
										{
											"key": "delta_end",
											"value": "<dateTime>",
											"description": "Filters items modified on or before the given date.             Example: `2021-12-31T23:59:59Z`",
											"disabled": true
										},
										{
											"key": "delta_start",
											"value": "<dateTime>",
											"description": "Filters items modified on or after the given date.             Example: `2020-01-01T00:00:00Z`",
											"disabled": true
										},
										{
											"key": "deployment_id",
											"value": "<integer>",
											"description": "The deployment ID associated with the conversations",
											"disabled": true
										},
										{
											"key": "employee_id",
											"value": "",
											"description": "Filter conversations on an employee ID",
											"disabled": true
										},
										{
											"key": "manager_id",
											"value": "",
											"description": "Filter conversations on a manager ID",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number to return"
										},
										{
											"key": "size",
											"value": "10"
										}
									]
								},
								"description": "Returns a list of conversations.\n            <strong>This endpoint is only available to users with the super admin role.</strong>"
							},
							"response": [
								{
									"id": "189e8488-ce48-46fa-89b5-3bdb19459348",
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/conversations/?delta_end=<dateTime>&delta_start=<dateTime>&deployment_id=<integer>&employee_id=<integer>&manager_id=<integer>&page=<integer>&size=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"conversations",
												""
											],
											"query": [
												{
													"description": "Filters items modified on or before the given date.             Example: `2021-12-31T23:59:59Z`",
													"key": "delta_end",
													"value": "<dateTime>"
												},
												{
													"description": "Filters items modified on or after the given date.             Example: `2020-01-01T00:00:00Z`",
													"key": "delta_start",
													"value": "<dateTime>"
												},
												{
													"description": "The deployment ID associated with the conversations",
													"key": "deployment_id",
													"value": "<integer>"
												},
												{
													"description": "Filter conversations on an employee ID",
													"key": "employee_id",
													"value": "<integer>"
												},
												{
													"description": "Filter conversations on a manager ID",
													"key": "manager_id",
													"value": "<integer>"
												},
												{
													"description": "Page number to return",
													"key": "page",
													"value": "<integer>"
												},
												{
													"description": "Number of items to return per page",
													"key": "size",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"more\": \"<boolean>\",\n  \"nextUrl\": \"<string>\",\n  \"results\": [\n    {\n      \"contributors\": [\n        {\n          \"response\": {\n            \"created\": \"<float>\",\n            \"created_by\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"uuid\": \"<uuid>\"\n            },\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"modified_on\": \"<dateTime>\",\n            \"responses\": [\n              {\n                \"answer\": \"<string>\",\n                \"created\": \"<float>\",\n                \"created_on\": \"<dateTime>\",\n                \"id\": \"<integer>\",\n                \"lock_date\": \"<date>\",\n                \"modified_on\": \"<dateTime>\",\n                \"question\": \"<string>\",\n                \"question_id\": \"<integer>\",\n                \"question_options\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"question_uuid\": \"<uuid>\",\n                \"rating_range\": \"<string>\",\n                \"type\": \"scale\",\n                \"updated\": \"<float>\",\n                \"uuid\": \"<uuid>\"\n              },\n              {\n                \"answer\": \"<string>\",\n                \"created\": \"<float>\",\n                \"created_on\": \"<dateTime>\",\n                \"id\": \"<integer>\",\n                \"lock_date\": \"<date>\",\n                \"modified_on\": \"<dateTime>\",\n                \"question\": \"<string>\",\n                \"question_id\": \"<integer>\",\n                \"question_options\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"question_uuid\": \"<uuid>\",\n                \"rating_range\": \"<string>\",\n                \"type\": \"rating\",\n                \"updated\": \"<float>\",\n                \"uuid\": \"<uuid>\"\n              }\n            ],\n            \"shared_on\": \"<float>\",\n            \"submitted_on\": \"<float>\",\n            \"unlocked_until\": \"<date>\",\n            \"updated\": \"<float>\",\n            \"updated_by\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"uuid\": \"<uuid>\"\n            },\n            \"uuid\": \"<uuid>\"\n          },\n          \"status\": \"post_hr_answering\",\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"uuid\": \"<uuid>\"\n          }\n        },\n        {\n          \"response\": {\n            \"created\": \"<float>\",\n            \"created_by\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"uuid\": \"<uuid>\"\n            },\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"modified_on\": \"<dateTime>\",\n            \"responses\": [\n              {\n                \"answer\": \"<string>\",\n                \"created\": \"<float>\",\n                \"created_on\": \"<dateTime>\",\n                \"id\": \"<integer>\",\n                \"lock_date\": \"<date>\",\n                \"modified_on\": \"<dateTime>\",\n                \"question\": \"<string>\",\n                \"question_id\": \"<integer>\",\n                \"question_options\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"question_uuid\": \"<uuid>\",\n                \"rating_range\": \"<string>\",\n                \"type\": \"scale\",\n                \"updated\": \"<float>\",\n                \"uuid\": \"<uuid>\"\n              },\n              {\n                \"answer\": \"<string>\",\n                \"created\": \"<float>\",\n                \"created_on\": \"<dateTime>\",\n                \"id\": \"<integer>\",\n                \"lock_date\": \"<date>\",\n                \"modified_on\": \"<dateTime>\",\n                \"question\": \"<string>\",\n                \"question_id\": \"<integer>\",\n                \"question_options\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"question_uuid\": \"<uuid>\",\n                \"rating_range\": \"<string>\",\n                \"type\": \"text\",\n                \"updated\": \"<float>\",\n                \"uuid\": \"<uuid>\"\n              }\n            ],\n            \"shared_on\": \"<float>\",\n            \"submitted_on\": \"<float>\",\n            \"unlocked_until\": \"<date>\",\n            \"updated\": \"<float>\",\n            \"updated_by\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"uuid\": \"<uuid>\"\n            },\n            \"uuid\": \"<uuid>\"\n          },\n          \"status\": \"post_hr_answering\",\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"uuid\": \"<uuid>\"\n          }\n        }\n      ],\n      \"created\": \"<float>\",\n      \"created_by\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"created_on\": \"<dateTime>\",\n      \"deployment_id\": \"<integer>\",\n      \"deployment_uuid\": \"<uuid>\",\n      \"description\": \"<string>\",\n      \"employee\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"employee_notes\": \"<string>\",\n      \"employee_notes_updated\": \"<double>\",\n      \"employee_response\": {\n        \"created\": \"<float>\",\n        \"created_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"id\": \"<integer>\",\n        \"modified_on\": \"<dateTime>\",\n        \"responses\": [\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"text\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          },\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"rating\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          }\n        ],\n        \"shared_on\": \"<float>\",\n        \"submitted_on\": \"<float>\",\n        \"unlocked_until\": \"<date>\",\n        \"updated\": \"<float>\",\n        \"updated_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"uuid\": \"<uuid>\"\n      },\n      \"employee_review_end\": \"<date>\",\n      \"employee_status\": \"completed\",\n      \"employee_submit_end\": \"<date>\",\n      \"end\": \"<date>\",\n      \"grace_period_end\": \"<date>\",\n      \"id\": \"<integer>\",\n      \"manager\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"manager_notes\": \"<string>\",\n      \"manager_notes_updated\": \"<double>\",\n      \"manager_response\": {\n        \"created\": \"<float>\",\n        \"created_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"id\": \"<integer>\",\n        \"modified_on\": \"<dateTime>\",\n        \"responses\": [\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"multiple_choice\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          },\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"scale\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          }\n        ],\n        \"shared_on\": \"<float>\",\n        \"submitted_on\": \"<float>\",\n        \"unlocked_until\": \"<date>\",\n        \"updated\": \"<float>\",\n        \"updated_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"uuid\": \"<uuid>\"\n      },\n      \"manager_review_end\": \"<date>\",\n      \"manager_status\": \"post_hr_completed\",\n      \"manager_submit_end\": \"<date>\",\n      \"marked_as_met\": \"not_required\",\n      \"modified_on\": \"<string>\",\n      \"name\": \"<string>\",\n      \"post_employee_questionnaire_pending\": \"<boolean>\",\n      \"post_employee_response\": {\n        \"created\": \"<float>\",\n        \"created_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"id\": \"<integer>\",\n        \"modified_on\": \"<dateTime>\",\n        \"responses\": [\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"scale\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          },\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"multiple_choice\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          }\n        ],\n        \"shared_on\": \"<float>\",\n        \"submitted_on\": \"<float>\",\n        \"unlocked_until\": \"<date>\",\n        \"updated\": \"<float>\",\n        \"updated_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"uuid\": \"<uuid>\"\n      },\n      \"post_manager_questionnaire_pending\": \"<boolean>\",\n      \"post_manager_response\": {\n        \"created\": \"<float>\",\n        \"created_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"id\": \"<integer>\",\n        \"modified_on\": \"<dateTime>\",\n        \"responses\": [\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"scale\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          },\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"multiple_choice\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          }\n        ],\n        \"shared_on\": \"<float>\",\n        \"submitted_on\": \"<float>\",\n        \"unlocked_until\": \"<date>\",\n        \"updated\": \"<float>\",\n        \"updated_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"uuid\": \"<uuid>\"\n      },\n      \"start\": \"<date>\",\n      \"type\": \"adhoc\",\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"contributors\": [\n        {\n          \"response\": {\n            \"created\": \"<float>\",\n            \"created_by\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"uuid\": \"<uuid>\"\n            },\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"modified_on\": \"<dateTime>\",\n            \"responses\": [\n              {\n                \"answer\": \"<string>\",\n                \"created\": \"<float>\",\n                \"created_on\": \"<dateTime>\",\n                \"id\": \"<integer>\",\n                \"lock_date\": \"<date>\",\n                \"modified_on\": \"<dateTime>\",\n                \"question\": \"<string>\",\n                \"question_id\": \"<integer>\",\n                \"question_options\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"question_uuid\": \"<uuid>\",\n                \"rating_range\": \"<string>\",\n                \"type\": \"text\",\n                \"updated\": \"<float>\",\n                \"uuid\": \"<uuid>\"\n              },\n              {\n                \"answer\": \"<string>\",\n                \"created\": \"<float>\",\n                \"created_on\": \"<dateTime>\",\n                \"id\": \"<integer>\",\n                \"lock_date\": \"<date>\",\n                \"modified_on\": \"<dateTime>\",\n                \"question\": \"<string>\",\n                \"question_id\": \"<integer>\",\n                \"question_options\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"question_uuid\": \"<uuid>\",\n                \"rating_range\": \"<string>\",\n                \"type\": \"multiple_choice\",\n                \"updated\": \"<float>\",\n                \"uuid\": \"<uuid>\"\n              }\n            ],\n            \"shared_on\": \"<float>\",\n            \"submitted_on\": \"<float>\",\n            \"unlocked_until\": \"<date>\",\n            \"updated\": \"<float>\",\n            \"updated_by\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"uuid\": \"<uuid>\"\n            },\n            \"uuid\": \"<uuid>\"\n          },\n          \"status\": \"answering\",\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"uuid\": \"<uuid>\"\n          }\n        },\n        {\n          \"response\": {\n            \"created\": \"<float>\",\n            \"created_by\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"uuid\": \"<uuid>\"\n            },\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"modified_on\": \"<dateTime>\",\n            \"responses\": [\n              {\n                \"answer\": \"<string>\",\n                \"created\": \"<float>\",\n                \"created_on\": \"<dateTime>\",\n                \"id\": \"<integer>\",\n                \"lock_date\": \"<date>\",\n                \"modified_on\": \"<dateTime>\",\n                \"question\": \"<string>\",\n                \"question_id\": \"<integer>\",\n                \"question_options\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"question_uuid\": \"<uuid>\",\n                \"rating_range\": \"<string>\",\n                \"type\": \"scale\",\n                \"updated\": \"<float>\",\n                \"uuid\": \"<uuid>\"\n              },\n              {\n                \"answer\": \"<string>\",\n                \"created\": \"<float>\",\n                \"created_on\": \"<dateTime>\",\n                \"id\": \"<integer>\",\n                \"lock_date\": \"<date>\",\n                \"modified_on\": \"<dateTime>\",\n                \"question\": \"<string>\",\n                \"question_id\": \"<integer>\",\n                \"question_options\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"question_uuid\": \"<uuid>\",\n                \"rating_range\": \"<string>\",\n                \"type\": \"scale\",\n                \"updated\": \"<float>\",\n                \"uuid\": \"<uuid>\"\n              }\n            ],\n            \"shared_on\": \"<float>\",\n            \"submitted_on\": \"<float>\",\n            \"unlocked_until\": \"<date>\",\n            \"updated\": \"<float>\",\n            \"updated_by\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"uuid\": \"<uuid>\"\n            },\n            \"uuid\": \"<uuid>\"\n          },\n          \"status\": \"post_hr_answering\",\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"uuid\": \"<uuid>\"\n          }\n        }\n      ],\n      \"created\": \"<float>\",\n      \"created_by\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"created_on\": \"<dateTime>\",\n      \"deployment_id\": \"<integer>\",\n      \"deployment_uuid\": \"<uuid>\",\n      \"description\": \"<string>\",\n      \"employee\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"employee_notes\": \"<string>\",\n      \"employee_notes_updated\": \"<double>\",\n      \"employee_response\": {\n        \"created\": \"<float>\",\n        \"created_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"id\": \"<integer>\",\n        \"modified_on\": \"<dateTime>\",\n        \"responses\": [\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"rating\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          },\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"scale\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          }\n        ],\n        \"shared_on\": \"<float>\",\n        \"submitted_on\": \"<float>\",\n        \"unlocked_until\": \"<date>\",\n        \"updated\": \"<float>\",\n        \"updated_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"uuid\": \"<uuid>\"\n      },\n      \"employee_review_end\": \"<date>\",\n      \"employee_status\": \"shared\",\n      \"employee_submit_end\": \"<date>\",\n      \"end\": \"<date>\",\n      \"grace_period_end\": \"<date>\",\n      \"id\": \"<integer>\",\n      \"manager\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"manager_notes\": \"<string>\",\n      \"manager_notes_updated\": \"<double>\",\n      \"manager_response\": {\n        \"created\": \"<float>\",\n        \"created_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"id\": \"<integer>\",\n        \"modified_on\": \"<dateTime>\",\n        \"responses\": [\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"multiple_choice\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          },\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"text\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          }\n        ],\n        \"shared_on\": \"<float>\",\n        \"submitted_on\": \"<float>\",\n        \"unlocked_until\": \"<date>\",\n        \"updated\": \"<float>\",\n        \"updated_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"uuid\": \"<uuid>\"\n      },\n      \"manager_review_end\": \"<date>\",\n      \"manager_status\": \"post_hr_pending\",\n      \"manager_submit_end\": \"<date>\",\n      \"marked_as_met\": \"not_met\",\n      \"modified_on\": \"<string>\",\n      \"name\": \"<string>\",\n      \"post_employee_questionnaire_pending\": \"<boolean>\",\n      \"post_employee_response\": {\n        \"created\": \"<float>\",\n        \"created_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"id\": \"<integer>\",\n        \"modified_on\": \"<dateTime>\",\n        \"responses\": [\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"multiple_choice\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          },\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"text\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          }\n        ],\n        \"shared_on\": \"<float>\",\n        \"submitted_on\": \"<float>\",\n        \"unlocked_until\": \"<date>\",\n        \"updated\": \"<float>\",\n        \"updated_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"uuid\": \"<uuid>\"\n      },\n      \"post_manager_questionnaire_pending\": \"<boolean>\",\n      \"post_manager_response\": {\n        \"created\": \"<float>\",\n        \"created_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"id\": \"<integer>\",\n        \"modified_on\": \"<dateTime>\",\n        \"responses\": [\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"multiple_choice\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          },\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"text\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          }\n        ],\n        \"shared_on\": \"<float>\",\n        \"submitted_on\": \"<float>\",\n        \"unlocked_until\": \"<date>\",\n        \"updated\": \"<float>\",\n        \"updated_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"uuid\": \"<uuid>\"\n      },\n      \"start\": \"<date>\",\n      \"type\": \"scheduled\",\n      \"uuid\": \"<uuid>\"\n    }\n  ]\n}"
								},
								{
									"id": "b9fe901f-f9fd-421f-89c5-eabf98c279ff",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/conversations/?delta_end=<dateTime>&delta_start=<dateTime>&deployment_id=<integer>&employee_id=<integer>&manager_id=<integer>&page=<integer>&size=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"conversations",
												""
											],
											"query": [
												{
													"description": "Filters items modified on or before the given date.             Example: `2021-12-31T23:59:59Z`",
													"key": "delta_end",
													"value": "<dateTime>"
												},
												{
													"description": "Filters items modified on or after the given date.             Example: `2020-01-01T00:00:00Z`",
													"key": "delta_start",
													"value": "<dateTime>"
												},
												{
													"description": "The deployment ID associated with the conversations",
													"key": "deployment_id",
													"value": "<integer>"
												},
												{
													"description": "Filter conversations on an employee ID",
													"key": "employee_id",
													"value": "<integer>"
												},
												{
													"description": "Filter conversations on a manager ID",
													"key": "manager_id",
													"value": "<integer>"
												},
												{
													"description": "Page number to return",
													"key": "page",
													"value": "<integer>"
												},
												{
													"description": "Number of items to return per page",
													"key": "size",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"detail\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Get a list of conversations with params",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "80545806-d1ae-4bcc-b15f-0d06bd331915",
										"exec": [
											"",
											"// Test the response body",
											"pm.test(\"Verify if Response body is valid\", function () {",
											"    var jsonData = pm.response.json();",
											" ",
											"    pm.expect(jsonData.results[0]).to.have.property(\"name\", pm.environment.get(\"conversation_name\"));",
											"    pm.expect(jsonData.results[0]).to.have.property(\"deployment_id\", pm.environment.get(\"conversation_deployment_id\"));",
											"    pm.expect(jsonData.results[0]).to.have.property(\"start\", pm.environment.get(\"conversation_delta_start\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c8af5765-3b30-4468-93d6-ecdc04407ed0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/conversations/?delta_end={{conversation_delta_end}}&delta_start={{conversation_delta_start}}&deployment_id={{conversation_deployment_id}}&employee_id={{conversation_employee_id}}&manager_id={{coneversation_manager_id}}&page=1&size=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"conversations",
										""
									],
									"query": [
										{
											"key": "delta_end",
											"value": "{{conversation_delta_end}}",
											"description": "Filters items modified on or before the given date.             Example: `2021-12-31T23:59:59Z`"
										},
										{
											"key": "delta_start",
											"value": "{{conversation_delta_start}}",
											"description": "Filters items modified on or after the given date.             Example: `2020-01-01T00:00:00Z`"
										},
										{
											"key": "deployment_id",
											"value": "{{conversation_deployment_id}}",
											"description": "The deployment ID associated with the conversations"
										},
										{
											"key": "employee_id",
											"value": "{{conversation_employee_id}}",
											"description": "Filter conversations on an employee ID"
										},
										{
											"key": "manager_id",
											"value": "{{coneversation_manager_id}}",
											"description": "Filter conversations on a manager ID"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number to return"
										},
										{
											"key": "size",
											"value": "10",
											"description": "Number of items to return per page"
										}
									]
								},
								"description": "Returns a list of conversations.\n            <strong>This endpoint is only available to users with the super admin role.</strong>"
							},
							"response": [
								{
									"id": "42b257bd-6501-4bd6-823f-07627aa7258e",
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/conversations/?delta_end=<dateTime>&delta_start=<dateTime>&deployment_id=<integer>&employee_id=<integer>&manager_id=<integer>&page=<integer>&size=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"conversations",
												""
											],
											"query": [
												{
													"description": "Filters items modified on or before the given date.             Example: `2021-12-31T23:59:59Z`",
													"key": "delta_end",
													"value": "<dateTime>"
												},
												{
													"description": "Filters items modified on or after the given date.             Example: `2020-01-01T00:00:00Z`",
													"key": "delta_start",
													"value": "<dateTime>"
												},
												{
													"description": "The deployment ID associated with the conversations",
													"key": "deployment_id",
													"value": "<integer>"
												},
												{
													"description": "Filter conversations on an employee ID",
													"key": "employee_id",
													"value": "<integer>"
												},
												{
													"description": "Filter conversations on a manager ID",
													"key": "manager_id",
													"value": "<integer>"
												},
												{
													"description": "Page number to return",
													"key": "page",
													"value": "<integer>"
												},
												{
													"description": "Number of items to return per page",
													"key": "size",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"more\": \"<boolean>\",\n  \"nextUrl\": \"<string>\",\n  \"results\": [\n    {\n      \"contributors\": [\n        {\n          \"response\": {\n            \"created\": \"<float>\",\n            \"created_by\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"uuid\": \"<uuid>\"\n            },\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"modified_on\": \"<dateTime>\",\n            \"responses\": [\n              {\n                \"answer\": \"<string>\",\n                \"created\": \"<float>\",\n                \"created_on\": \"<dateTime>\",\n                \"id\": \"<integer>\",\n                \"lock_date\": \"<date>\",\n                \"modified_on\": \"<dateTime>\",\n                \"question\": \"<string>\",\n                \"question_id\": \"<integer>\",\n                \"question_options\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"question_uuid\": \"<uuid>\",\n                \"rating_range\": \"<string>\",\n                \"type\": \"scale\",\n                \"updated\": \"<float>\",\n                \"uuid\": \"<uuid>\"\n              },\n              {\n                \"answer\": \"<string>\",\n                \"created\": \"<float>\",\n                \"created_on\": \"<dateTime>\",\n                \"id\": \"<integer>\",\n                \"lock_date\": \"<date>\",\n                \"modified_on\": \"<dateTime>\",\n                \"question\": \"<string>\",\n                \"question_id\": \"<integer>\",\n                \"question_options\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"question_uuid\": \"<uuid>\",\n                \"rating_range\": \"<string>\",\n                \"type\": \"rating\",\n                \"updated\": \"<float>\",\n                \"uuid\": \"<uuid>\"\n              }\n            ],\n            \"shared_on\": \"<float>\",\n            \"submitted_on\": \"<float>\",\n            \"unlocked_until\": \"<date>\",\n            \"updated\": \"<float>\",\n            \"updated_by\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"uuid\": \"<uuid>\"\n            },\n            \"uuid\": \"<uuid>\"\n          },\n          \"status\": \"post_hr_answering\",\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"uuid\": \"<uuid>\"\n          }\n        },\n        {\n          \"response\": {\n            \"created\": \"<float>\",\n            \"created_by\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"uuid\": \"<uuid>\"\n            },\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"modified_on\": \"<dateTime>\",\n            \"responses\": [\n              {\n                \"answer\": \"<string>\",\n                \"created\": \"<float>\",\n                \"created_on\": \"<dateTime>\",\n                \"id\": \"<integer>\",\n                \"lock_date\": \"<date>\",\n                \"modified_on\": \"<dateTime>\",\n                \"question\": \"<string>\",\n                \"question_id\": \"<integer>\",\n                \"question_options\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"question_uuid\": \"<uuid>\",\n                \"rating_range\": \"<string>\",\n                \"type\": \"scale\",\n                \"updated\": \"<float>\",\n                \"uuid\": \"<uuid>\"\n              },\n              {\n                \"answer\": \"<string>\",\n                \"created\": \"<float>\",\n                \"created_on\": \"<dateTime>\",\n                \"id\": \"<integer>\",\n                \"lock_date\": \"<date>\",\n                \"modified_on\": \"<dateTime>\",\n                \"question\": \"<string>\",\n                \"question_id\": \"<integer>\",\n                \"question_options\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"question_uuid\": \"<uuid>\",\n                \"rating_range\": \"<string>\",\n                \"type\": \"text\",\n                \"updated\": \"<float>\",\n                \"uuid\": \"<uuid>\"\n              }\n            ],\n            \"shared_on\": \"<float>\",\n            \"submitted_on\": \"<float>\",\n            \"unlocked_until\": \"<date>\",\n            \"updated\": \"<float>\",\n            \"updated_by\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"uuid\": \"<uuid>\"\n            },\n            \"uuid\": \"<uuid>\"\n          },\n          \"status\": \"post_hr_answering\",\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"uuid\": \"<uuid>\"\n          }\n        }\n      ],\n      \"created\": \"<float>\",\n      \"created_by\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"created_on\": \"<dateTime>\",\n      \"deployment_id\": \"<integer>\",\n      \"deployment_uuid\": \"<uuid>\",\n      \"description\": \"<string>\",\n      \"employee\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"employee_notes\": \"<string>\",\n      \"employee_notes_updated\": \"<double>\",\n      \"employee_response\": {\n        \"created\": \"<float>\",\n        \"created_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"id\": \"<integer>\",\n        \"modified_on\": \"<dateTime>\",\n        \"responses\": [\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"text\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          },\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"rating\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          }\n        ],\n        \"shared_on\": \"<float>\",\n        \"submitted_on\": \"<float>\",\n        \"unlocked_until\": \"<date>\",\n        \"updated\": \"<float>\",\n        \"updated_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"uuid\": \"<uuid>\"\n      },\n      \"employee_review_end\": \"<date>\",\n      \"employee_status\": \"completed\",\n      \"employee_submit_end\": \"<date>\",\n      \"end\": \"<date>\",\n      \"grace_period_end\": \"<date>\",\n      \"id\": \"<integer>\",\n      \"manager\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"manager_notes\": \"<string>\",\n      \"manager_notes_updated\": \"<double>\",\n      \"manager_response\": {\n        \"created\": \"<float>\",\n        \"created_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"id\": \"<integer>\",\n        \"modified_on\": \"<dateTime>\",\n        \"responses\": [\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"multiple_choice\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          },\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"scale\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          }\n        ],\n        \"shared_on\": \"<float>\",\n        \"submitted_on\": \"<float>\",\n        \"unlocked_until\": \"<date>\",\n        \"updated\": \"<float>\",\n        \"updated_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"uuid\": \"<uuid>\"\n      },\n      \"manager_review_end\": \"<date>\",\n      \"manager_status\": \"post_hr_completed\",\n      \"manager_submit_end\": \"<date>\",\n      \"marked_as_met\": \"not_required\",\n      \"modified_on\": \"<string>\",\n      \"name\": \"<string>\",\n      \"post_employee_questionnaire_pending\": \"<boolean>\",\n      \"post_employee_response\": {\n        \"created\": \"<float>\",\n        \"created_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"id\": \"<integer>\",\n        \"modified_on\": \"<dateTime>\",\n        \"responses\": [\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"scale\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          },\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"multiple_choice\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          }\n        ],\n        \"shared_on\": \"<float>\",\n        \"submitted_on\": \"<float>\",\n        \"unlocked_until\": \"<date>\",\n        \"updated\": \"<float>\",\n        \"updated_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"uuid\": \"<uuid>\"\n      },\n      \"post_manager_questionnaire_pending\": \"<boolean>\",\n      \"post_manager_response\": {\n        \"created\": \"<float>\",\n        \"created_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"id\": \"<integer>\",\n        \"modified_on\": \"<dateTime>\",\n        \"responses\": [\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"scale\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          },\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"multiple_choice\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          }\n        ],\n        \"shared_on\": \"<float>\",\n        \"submitted_on\": \"<float>\",\n        \"unlocked_until\": \"<date>\",\n        \"updated\": \"<float>\",\n        \"updated_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"uuid\": \"<uuid>\"\n      },\n      \"start\": \"<date>\",\n      \"type\": \"adhoc\",\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"contributors\": [\n        {\n          \"response\": {\n            \"created\": \"<float>\",\n            \"created_by\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"uuid\": \"<uuid>\"\n            },\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"modified_on\": \"<dateTime>\",\n            \"responses\": [\n              {\n                \"answer\": \"<string>\",\n                \"created\": \"<float>\",\n                \"created_on\": \"<dateTime>\",\n                \"id\": \"<integer>\",\n                \"lock_date\": \"<date>\",\n                \"modified_on\": \"<dateTime>\",\n                \"question\": \"<string>\",\n                \"question_id\": \"<integer>\",\n                \"question_options\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"question_uuid\": \"<uuid>\",\n                \"rating_range\": \"<string>\",\n                \"type\": \"text\",\n                \"updated\": \"<float>\",\n                \"uuid\": \"<uuid>\"\n              },\n              {\n                \"answer\": \"<string>\",\n                \"created\": \"<float>\",\n                \"created_on\": \"<dateTime>\",\n                \"id\": \"<integer>\",\n                \"lock_date\": \"<date>\",\n                \"modified_on\": \"<dateTime>\",\n                \"question\": \"<string>\",\n                \"question_id\": \"<integer>\",\n                \"question_options\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"question_uuid\": \"<uuid>\",\n                \"rating_range\": \"<string>\",\n                \"type\": \"multiple_choice\",\n                \"updated\": \"<float>\",\n                \"uuid\": \"<uuid>\"\n              }\n            ],\n            \"shared_on\": \"<float>\",\n            \"submitted_on\": \"<float>\",\n            \"unlocked_until\": \"<date>\",\n            \"updated\": \"<float>\",\n            \"updated_by\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"uuid\": \"<uuid>\"\n            },\n            \"uuid\": \"<uuid>\"\n          },\n          \"status\": \"answering\",\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"uuid\": \"<uuid>\"\n          }\n        },\n        {\n          \"response\": {\n            \"created\": \"<float>\",\n            \"created_by\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"uuid\": \"<uuid>\"\n            },\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"modified_on\": \"<dateTime>\",\n            \"responses\": [\n              {\n                \"answer\": \"<string>\",\n                \"created\": \"<float>\",\n                \"created_on\": \"<dateTime>\",\n                \"id\": \"<integer>\",\n                \"lock_date\": \"<date>\",\n                \"modified_on\": \"<dateTime>\",\n                \"question\": \"<string>\",\n                \"question_id\": \"<integer>\",\n                \"question_options\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"question_uuid\": \"<uuid>\",\n                \"rating_range\": \"<string>\",\n                \"type\": \"scale\",\n                \"updated\": \"<float>\",\n                \"uuid\": \"<uuid>\"\n              },\n              {\n                \"answer\": \"<string>\",\n                \"created\": \"<float>\",\n                \"created_on\": \"<dateTime>\",\n                \"id\": \"<integer>\",\n                \"lock_date\": \"<date>\",\n                \"modified_on\": \"<dateTime>\",\n                \"question\": \"<string>\",\n                \"question_id\": \"<integer>\",\n                \"question_options\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"question_uuid\": \"<uuid>\",\n                \"rating_range\": \"<string>\",\n                \"type\": \"scale\",\n                \"updated\": \"<float>\",\n                \"uuid\": \"<uuid>\"\n              }\n            ],\n            \"shared_on\": \"<float>\",\n            \"submitted_on\": \"<float>\",\n            \"unlocked_until\": \"<date>\",\n            \"updated\": \"<float>\",\n            \"updated_by\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"uuid\": \"<uuid>\"\n            },\n            \"uuid\": \"<uuid>\"\n          },\n          \"status\": \"post_hr_answering\",\n          \"user\": {\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"uuid\": \"<uuid>\"\n          }\n        }\n      ],\n      \"created\": \"<float>\",\n      \"created_by\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"created_on\": \"<dateTime>\",\n      \"deployment_id\": \"<integer>\",\n      \"deployment_uuid\": \"<uuid>\",\n      \"description\": \"<string>\",\n      \"employee\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"employee_notes\": \"<string>\",\n      \"employee_notes_updated\": \"<double>\",\n      \"employee_response\": {\n        \"created\": \"<float>\",\n        \"created_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"id\": \"<integer>\",\n        \"modified_on\": \"<dateTime>\",\n        \"responses\": [\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"rating\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          },\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"scale\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          }\n        ],\n        \"shared_on\": \"<float>\",\n        \"submitted_on\": \"<float>\",\n        \"unlocked_until\": \"<date>\",\n        \"updated\": \"<float>\",\n        \"updated_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"uuid\": \"<uuid>\"\n      },\n      \"employee_review_end\": \"<date>\",\n      \"employee_status\": \"shared\",\n      \"employee_submit_end\": \"<date>\",\n      \"end\": \"<date>\",\n      \"grace_period_end\": \"<date>\",\n      \"id\": \"<integer>\",\n      \"manager\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"manager_notes\": \"<string>\",\n      \"manager_notes_updated\": \"<double>\",\n      \"manager_response\": {\n        \"created\": \"<float>\",\n        \"created_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"id\": \"<integer>\",\n        \"modified_on\": \"<dateTime>\",\n        \"responses\": [\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"multiple_choice\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          },\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"text\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          }\n        ],\n        \"shared_on\": \"<float>\",\n        \"submitted_on\": \"<float>\",\n        \"unlocked_until\": \"<date>\",\n        \"updated\": \"<float>\",\n        \"updated_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"uuid\": \"<uuid>\"\n      },\n      \"manager_review_end\": \"<date>\",\n      \"manager_status\": \"post_hr_pending\",\n      \"manager_submit_end\": \"<date>\",\n      \"marked_as_met\": \"not_met\",\n      \"modified_on\": \"<string>\",\n      \"name\": \"<string>\",\n      \"post_employee_questionnaire_pending\": \"<boolean>\",\n      \"post_employee_response\": {\n        \"created\": \"<float>\",\n        \"created_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"id\": \"<integer>\",\n        \"modified_on\": \"<dateTime>\",\n        \"responses\": [\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"multiple_choice\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          },\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"text\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          }\n        ],\n        \"shared_on\": \"<float>\",\n        \"submitted_on\": \"<float>\",\n        \"unlocked_until\": \"<date>\",\n        \"updated\": \"<float>\",\n        \"updated_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"uuid\": \"<uuid>\"\n      },\n      \"post_manager_questionnaire_pending\": \"<boolean>\",\n      \"post_manager_response\": {\n        \"created\": \"<float>\",\n        \"created_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"id\": \"<integer>\",\n        \"modified_on\": \"<dateTime>\",\n        \"responses\": [\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"multiple_choice\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          },\n          {\n            \"answer\": \"<string>\",\n            \"created\": \"<float>\",\n            \"created_on\": \"<dateTime>\",\n            \"id\": \"<integer>\",\n            \"lock_date\": \"<date>\",\n            \"modified_on\": \"<dateTime>\",\n            \"question\": \"<string>\",\n            \"question_id\": \"<integer>\",\n            \"question_options\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"question_uuid\": \"<uuid>\",\n            \"rating_range\": \"<string>\",\n            \"type\": \"text\",\n            \"updated\": \"<float>\",\n            \"uuid\": \"<uuid>\"\n          }\n        ],\n        \"shared_on\": \"<float>\",\n        \"submitted_on\": \"<float>\",\n        \"unlocked_until\": \"<date>\",\n        \"updated\": \"<float>\",\n        \"updated_by\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"uuid\": \"<uuid>\"\n      },\n      \"start\": \"<date>\",\n      \"type\": \"scheduled\",\n      \"uuid\": \"<uuid>\"\n    }\n  ]\n}"
								},
								{
									"id": "a131cec2-f764-4772-b413-83fadf1e2e81",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/conversations/?delta_end=<dateTime>&delta_start=<dateTime>&deployment_id=<integer>&employee_id=<integer>&manager_id=<integer>&page=<integer>&size=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"conversations",
												""
											],
											"query": [
												{
													"description": "Filters items modified on or before the given date.             Example: `2021-12-31T23:59:59Z`",
													"key": "delta_end",
													"value": "<dateTime>"
												},
												{
													"description": "Filters items modified on or after the given date.             Example: `2020-01-01T00:00:00Z`",
													"key": "delta_start",
													"value": "<dateTime>"
												},
												{
													"description": "The deployment ID associated with the conversations",
													"key": "deployment_id",
													"value": "<integer>"
												},
												{
													"description": "Filter conversations on an employee ID",
													"key": "employee_id",
													"value": "<integer>"
												},
												{
													"description": "Filter conversations on a manager ID",
													"key": "manager_id",
													"value": "<integer>"
												},
												{
													"description": "Page number to return",
													"key": "page",
													"value": "<integer>"
												},
												{
													"description": "Number of items to return per page",
													"key": "size",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "c61cb002-29dd-4c3a-bfbb-5d1f2e86b361"
				},
				{
					"name": "Get a list of conversation templates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ce7cde1c-aa3b-4197-b66b-2eed33a61a9b",
								"exec": [
									"//Set collection veriabled from response",
									"pm.test(\"Store values in collection variable\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"conversation_template_uuid\", jsonData.results[0].uuid)",
									"    pm.environment.set(\"conversation_template_id\", jsonData.results[0].id);",
									"    pm.environment.set(\"conversation_template_name\", jsonData.results[0].name);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "65e3bd61-04b3-42d8-8f5b-2cecb00f13e6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/conversations/templates/?enabled=True&page=1&size=10&type=scheduled",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"conversations",
								"templates",
								""
							],
							"query": [
								{
									"key": "enabled",
									"value": "True",
									"description": "Filter conversation templates by enabled conversations"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number to return"
								},
								{
									"key": "size",
									"value": "10",
									"description": "Number of items to return per page"
								},
								{
									"key": "type",
									"value": "scheduled",
									"description": "Filter conversation templates by type"
								}
							]
						},
						"description": "Returns a list of conversation templates.\n            <strong>This endpoint is only available to users with the admin or super admin role.</strong>"
					},
					"response": [
						{
							"id": "72ab5e69-6973-44fa-a59a-547ed1aac1e5",
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/conversations/templates/?enabled=<boolean>&page=<integer>&size=<integer>&type=scheduled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"conversations",
										"templates",
										""
									],
									"query": [
										{
											"description": "Filter conversation templates by enabled conversations",
											"key": "enabled",
											"value": "<boolean>"
										},
										{
											"description": "Page number to return",
											"key": "page",
											"value": "<integer>"
										},
										{
											"description": "Number of items to return per page",
											"key": "size",
											"value": "<integer>"
										},
										{
											"description": "Filter conversation templates by type",
											"key": "type",
											"value": "scheduled"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"more\": \"<boolean>\",\n  \"nextUrl\": \"<string>\",\n  \"results\": [\n    {\n      \"allowed_employees\": [\n        {\n          \"email\": \"<email>\",\n          \"id\": \"<integer>\",\n          \"is_active\": \"<boolean>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"id\": \"<integer>\",\n          \"is_active\": \"<boolean>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"allowed_groups\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"created\": \"<float>\",\n      \"created_by\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"created_on\": \"<dateTime>\",\n      \"deployments\": [\n        {\n          \"cycles\": [\n            {\n              \"end\": \"<date>\",\n              \"grace_period_end\": \"<date>\",\n              \"id\": \"<integer>\",\n              \"lock_date\": \"<date>\",\n              \"lock_on_share\": \"<boolean>\",\n              \"review_end\": \"<date>\",\n              \"role\": \"matrix_manager\",\n              \"stage\": \"post_cycle\",\n              \"start\": \"<date>\",\n              \"submit_end\": \"<date>\",\n              \"uuid\": \"<uuid>\"\n            },\n            {\n              \"end\": \"<date>\",\n              \"grace_period_end\": \"<date>\",\n              \"id\": \"<integer>\",\n              \"lock_date\": \"<date>\",\n              \"lock_on_share\": \"<boolean>\",\n              \"review_end\": \"<date>\",\n              \"role\": \"employee\",\n              \"stage\": \"primary\",\n              \"start\": \"<date>\",\n              \"submit_end\": \"<date>\",\n              \"uuid\": \"<uuid>\"\n            }\n          ],\n          \"description\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"cycles\": [\n            {\n              \"end\": \"<date>\",\n              \"grace_period_end\": \"<date>\",\n              \"id\": \"<integer>\",\n              \"lock_date\": \"<date>\",\n              \"lock_on_share\": \"<boolean>\",\n              \"review_end\": \"<date>\",\n              \"role\": \"matrix_manager\",\n              \"stage\": \"post_cycle\",\n              \"start\": \"<date>\",\n              \"submit_end\": \"<date>\",\n              \"uuid\": \"<uuid>\"\n            },\n            {\n              \"end\": \"<date>\",\n              \"grace_period_end\": \"<date>\",\n              \"id\": \"<integer>\",\n              \"lock_date\": \"<date>\",\n              \"lock_on_share\": \"<boolean>\",\n              \"review_end\": \"<date>\",\n              \"role\": \"manager\",\n              \"stage\": \"primary\",\n              \"start\": \"<date>\",\n              \"submit_end\": \"<date>\",\n              \"uuid\": \"<uuid>\"\n            }\n          ],\n          \"description\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"hr_admin_permission\": \"can_only_view\",\n      \"hrq_enabled\": \"<boolean>\",\n      \"hrq_is_concurrent\": \"<boolean>\",\n      \"hrq_notification_on_due\": \"<boolean>\",\n      \"hrq_notification_on_start\": \"<boolean>\",\n      \"hrq_participants\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"id\": \"<integer>\",\n      \"is_goal_creation_enabled\": \"<boolean>\",\n      \"matrix_manager_can_see_direct_report_responses\": \"<boolean>\",\n      \"matrix_manager_can_see_responses\": \"<boolean>\",\n      \"matrix_manager_enabled\": \"<boolean>\",\n      \"modified_on\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"notification_midcycle_days\": \"<integer>\",\n      \"notification_on_end\": \"<boolean>\",\n      \"notification_on_start\": \"<boolean>\",\n      \"notification_overdue_days\": \"<integer>\",\n      \"only_managers_can_initiate\": \"<boolean>\",\n      \"participants\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"require_marked_as_met\": \"<boolean>\",\n      \"skip_level_managers_level\": \"any\",\n      \"skip_level_managers_permission\": \"can_edit\",\n      \"super_admin_permission\": \"no_access\",\n      \"type\": \"scheduled\",\n      \"updated\": \"<float>\",\n      \"updated_by\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"allowed_employees\": [\n        {\n          \"email\": \"<email>\",\n          \"id\": \"<integer>\",\n          \"is_active\": \"<boolean>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"id\": \"<integer>\",\n          \"is_active\": \"<boolean>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"allowed_groups\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"created\": \"<float>\",\n      \"created_by\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"created_on\": \"<dateTime>\",\n      \"deployments\": [\n        {\n          \"cycles\": [\n            {\n              \"end\": \"<date>\",\n              \"grace_period_end\": \"<date>\",\n              \"id\": \"<integer>\",\n              \"lock_date\": \"<date>\",\n              \"lock_on_share\": \"<boolean>\",\n              \"review_end\": \"<date>\",\n              \"role\": \"manager\",\n              \"stage\": \"post_cycle\",\n              \"start\": \"<date>\",\n              \"submit_end\": \"<date>\",\n              \"uuid\": \"<uuid>\"\n            },\n            {\n              \"end\": \"<date>\",\n              \"grace_period_end\": \"<date>\",\n              \"id\": \"<integer>\",\n              \"lock_date\": \"<date>\",\n              \"lock_on_share\": \"<boolean>\",\n              \"review_end\": \"<date>\",\n              \"role\": \"matrix_manager\",\n              \"stage\": \"primary\",\n              \"start\": \"<date>\",\n              \"submit_end\": \"<date>\",\n              \"uuid\": \"<uuid>\"\n            }\n          ],\n          \"description\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"cycles\": [\n            {\n              \"end\": \"<date>\",\n              \"grace_period_end\": \"<date>\",\n              \"id\": \"<integer>\",\n              \"lock_date\": \"<date>\",\n              \"lock_on_share\": \"<boolean>\",\n              \"review_end\": \"<date>\",\n              \"role\": \"manager\",\n              \"stage\": \"post_cycle\",\n              \"start\": \"<date>\",\n              \"submit_end\": \"<date>\",\n              \"uuid\": \"<uuid>\"\n            },\n            {\n              \"end\": \"<date>\",\n              \"grace_period_end\": \"<date>\",\n              \"id\": \"<integer>\",\n              \"lock_date\": \"<date>\",\n              \"lock_on_share\": \"<boolean>\",\n              \"review_end\": \"<date>\",\n              \"role\": \"matrix_manager\",\n              \"stage\": \"post_cycle\",\n              \"start\": \"<date>\",\n              \"submit_end\": \"<date>\",\n              \"uuid\": \"<uuid>\"\n            }\n          ],\n          \"description\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"description\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"hr_admin_permission\": \"no_access\",\n      \"hrq_enabled\": \"<boolean>\",\n      \"hrq_is_concurrent\": \"<boolean>\",\n      \"hrq_notification_on_due\": \"<boolean>\",\n      \"hrq_notification_on_start\": \"<boolean>\",\n      \"hrq_participants\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"id\": \"<integer>\",\n      \"is_goal_creation_enabled\": \"<boolean>\",\n      \"matrix_manager_can_see_direct_report_responses\": \"<boolean>\",\n      \"matrix_manager_can_see_responses\": \"<boolean>\",\n      \"matrix_manager_enabled\": \"<boolean>\",\n      \"modified_on\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"notification_midcycle_days\": \"<integer>\",\n      \"notification_on_end\": \"<boolean>\",\n      \"notification_on_start\": \"<boolean>\",\n      \"notification_overdue_days\": \"<integer>\",\n      \"only_managers_can_initiate\": \"<boolean>\",\n      \"participants\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"require_marked_as_met\": \"<boolean>\",\n      \"skip_level_managers_level\": \"none\",\n      \"skip_level_managers_permission\": \"can_only_view\",\n      \"super_admin_permission\": \"no_access\",\n      \"type\": \"adhoc\",\n      \"updated\": \"<float>\",\n      \"updated_by\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"uuid\": \"<uuid>\"\n    }\n  ]\n}"
						},
						{
							"id": "72a0895a-bff7-4524-ab50-14d07331a012",
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/conversations/templates/?enabled=<boolean>&page=<integer>&size=<integer>&type=scheduled",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"conversations",
										"templates",
										""
									],
									"query": [
										{
											"description": "Filter conversation templates by enabled conversations",
											"key": "enabled",
											"value": "<boolean>"
										},
										{
											"description": "Page number to return",
											"key": "page",
											"value": "<integer>"
										},
										{
											"description": "Number of items to return per page",
											"key": "size",
											"value": "<integer>"
										},
										{
											"description": "Filter conversation templates by type",
											"key": "type",
											"value": "scheduled"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get conversation template",
					"id": "e641e170-bf6a-4774-9a21-930caee92b9f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/conversations/templates/:template_id/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"conversations",
								"templates",
								":template_id",
								""
							],
							"variable": [
								{
									"id": "ab1308ac-1f84-4784-aefe-2ee744991f6c",
									"key": "template_id",
									"value": "{{conversation_template_id}}"
								}
							]
						},
						"description": "Returns a conversation template.\n            <strong>This endpoint is only available to users with the admin or super admin role.</strong>"
					},
					"response": [
						{
							"id": "f1655eb8-dc5f-4f84-990b-c43ed772af47",
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/conversations/templates/:template_id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"conversations",
										"templates",
										":template_id",
										""
									],
									"variable": [
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"allowed_employees\": [\n    {\n      \"email\": \"<email>\",\n      \"id\": \"<integer>\",\n      \"is_active\": \"<boolean>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"id\": \"<integer>\",\n      \"is_active\": \"<boolean>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"allowed_groups\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"created\": \"<float>\",\n  \"created_by\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"uuid\": \"<uuid>\"\n  },\n  \"created_on\": \"<dateTime>\",\n  \"deployments\": [\n    {\n      \"cycles\": [\n        {\n          \"end\": \"<date>\",\n          \"grace_period_end\": \"<date>\",\n          \"id\": \"<integer>\",\n          \"lock_date\": \"<date>\",\n          \"lock_on_share\": \"<boolean>\",\n          \"review_end\": \"<date>\",\n          \"role\": \"matrix_manager\",\n          \"stage\": \"post_cycle\",\n          \"start\": \"<date>\",\n          \"submit_end\": \"<date>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"end\": \"<date>\",\n          \"grace_period_end\": \"<date>\",\n          \"id\": \"<integer>\",\n          \"lock_date\": \"<date>\",\n          \"lock_on_share\": \"<boolean>\",\n          \"review_end\": \"<date>\",\n          \"role\": \"matrix_manager\",\n          \"stage\": \"post_cycle\",\n          \"start\": \"<date>\",\n          \"submit_end\": \"<date>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"cycles\": [\n        {\n          \"end\": \"<date>\",\n          \"grace_period_end\": \"<date>\",\n          \"id\": \"<integer>\",\n          \"lock_date\": \"<date>\",\n          \"lock_on_share\": \"<boolean>\",\n          \"review_end\": \"<date>\",\n          \"role\": \"matrix_manager\",\n          \"stage\": \"post_cycle\",\n          \"start\": \"<date>\",\n          \"submit_end\": \"<date>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"end\": \"<date>\",\n          \"grace_period_end\": \"<date>\",\n          \"id\": \"<integer>\",\n          \"lock_date\": \"<date>\",\n          \"lock_on_share\": \"<boolean>\",\n          \"review_end\": \"<date>\",\n          \"role\": \"matrix_manager\",\n          \"stage\": \"primary\",\n          \"start\": \"<date>\",\n          \"submit_end\": \"<date>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"uuid\": \"<uuid>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"hr_admin_permission\": \"no_access\",\n  \"hrq_enabled\": \"<boolean>\",\n  \"hrq_is_concurrent\": \"<boolean>\",\n  \"hrq_notification_on_due\": \"<boolean>\",\n  \"hrq_notification_on_start\": \"<boolean>\",\n  \"hrq_participants\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<integer>\",\n  \"is_goal_creation_enabled\": \"<boolean>\",\n  \"matrix_manager_can_see_direct_report_responses\": \"<boolean>\",\n  \"matrix_manager_can_see_responses\": \"<boolean>\",\n  \"matrix_manager_enabled\": \"<boolean>\",\n  \"modified_on\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"notification_midcycle_days\": \"<integer>\",\n  \"notification_on_end\": \"<boolean>\",\n  \"notification_on_start\": \"<boolean>\",\n  \"notification_overdue_days\": \"<integer>\",\n  \"only_managers_can_initiate\": \"<boolean>\",\n  \"participants\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"require_marked_as_met\": \"<boolean>\",\n  \"skip_level_managers_level\": \"any\",\n  \"skip_level_managers_permission\": \"no_access\",\n  \"super_admin_permission\": \"can_edit\",\n  \"type\": \"adhoc\",\n  \"updated\": \"<float>\",\n  \"updated_by\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"uuid\": \"<uuid>\"\n  },\n  \"uuid\": \"<uuid>\"\n}"
						},
						{
							"id": "7e672955-8fef-4264-a525-54e810b93618",
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/conversations/templates/:template_id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"conversations",
										"templates",
										":template_id",
										""
									],
									"variable": [
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "45021865-02b0-4f2d-9035-3a43f44b1223",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e14457b5-19f5-4bd4-9668-45eedc60186a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7b4dd731-e0b2-4771-892f-54ceadb8926f",
						"type": "text/javascript",
						"exec": [
							"// Test error handling by sending a request to a non-existent endpoint",
							"",
							"pm.sendRequest({",
							"    url: \"http://rainforest.betterworks.com/api/v1/conversationss\",",
							"    method: \"GET\",",
							"    header: {",
							"    Authorization : pm.environment.get(\"Authorization\")",
							"    }",
							"    ",
							"}, function (err, response) {",
							"    pm.test(\"Verify if status code is 404 incase of incorrect URL passed\", function () {",
							"        pm.expect(response).to.have.status(404);",
							"    });",
							"});",
							""
						]
					}
				}
			]
		},
		{
			"name": "feedback",
			"item": [
				{
					"name": "Get a list of feedback",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e8fe87b-09c7-4cc5-895a-7790eddbdc15",
								"exec": [
									"//Set collection veriabled from response",
									"pm.test(\"Store values in collection variable\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"feedback_uuid\", jsonData.results[0].uuid)",
									"    pm.environment.set(\"feedback_id\", jsonData.results[0].id);",
									"    pm.environment.set(\"feedback_cycle_id\", jsonData.results[0].cycle_id);",
									"    pm.environment.set(\"feedback_name\", jsonData.results[0].for_user.name);",
									"    pm.environment.set(\"feedback_for_user_id\", jsonData.results[0].for_user.id);",
									"    pm.environment.set(\"feedback_response_id\", jsonData.results[0].responses[0].id);",
									"    pm.environment.set(\"feedback_response_ques_id\", jsonData.results[0].responses[0].question);",
									"    pm.environment.set(\"feedback_id\", jsonData.results[0].responses[0].feedback_id);",
									"});",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "47945493-be44-401e-8b5c-f505447fdf32",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/feedback/?for_user_id={{feedback_for_user}}&page=1&size=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"feedback",
								""
							],
							"query": [
								{
									"key": "cycle_id",
									"value": "<integer>",
									"description": "The feedback cycle ID",
									"disabled": true
								},
								{
									"key": "delta_end",
									"value": "<dateTime>",
									"description": "Filters items modified on or before the given date.             Example: `2021-12-31T23:59:59Z`",
									"disabled": true
								},
								{
									"key": "delta_start",
									"value": "<dateTime>",
									"description": "Filters items modified on or after the given date.             Example: `2020-01-01T00:00:00Z`",
									"disabled": true
								},
								{
									"key": "for_user_id",
									"value": "{{feedback_for_user}}",
									"description": "The ID of the user that received feedback"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number to return"
								},
								{
									"key": "size",
									"value": "10",
									"description": "Number of items to return per page"
								}
							]
						},
						"description": "Returns a list of feedback. \n\n            \n The request must include `cycle_id` and/or `for_user_id`.\n            If `cycle_id`, all feedback related to that cycle id will be populated.\n            If `for_user_id`, all feedback related to that user id will be populated."
					},
					"response": [
						{
							"id": "86f5dd06-ac0e-4506-af63-763132058760",
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/feedback/?cycle_id=<integer>&delta_end=<dateTime>&delta_start=<dateTime>&for_user_id=<integer>&page=<integer>&size=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"feedback",
										""
									],
									"query": [
										{
											"description": "The feedback cycle ID",
											"key": "cycle_id",
											"value": "<integer>"
										},
										{
											"description": "Filters items modified on or before the given date.             Example: `2021-12-31T23:59:59Z`",
											"key": "delta_end",
											"value": "<dateTime>"
										},
										{
											"description": "Filters items modified on or after the given date.             Example: `2020-01-01T00:00:00Z`",
											"key": "delta_start",
											"value": "<dateTime>"
										},
										{
											"description": "The ID of the user that received feedback",
											"key": "for_user_id",
											"value": "<integer>"
										},
										{
											"description": "Page number to return",
											"key": "page",
											"value": "<integer>"
										},
										{
											"description": "Number of items to return per page",
											"key": "size",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"more\": \"<boolean>\",\n  \"nextUrl\": \"<string>\",\n  \"results\": [\n    {\n      \"created\": \"<float>\",\n      \"created_by\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"created_on\": \"<dateTime>\",\n      \"cycle\": {\n        \"cycle_end\": \"<date>\",\n        \"cycle_start\": \"<date>\",\n        \"enable_anytime_nomination\": \"<boolean>\",\n        \"feedback_start\": \"<date>\",\n        \"grace_period_end\": \"<date>\",\n        \"id\": \"<integer>\",\n        \"selection_end\": \"<date>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"cycle_id\": \"<integer>\",\n      \"employee_can_view\": \"<boolean>\",\n      \"employee_see_identity\": \"<boolean>\",\n      \"for_user\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"hold_feedback\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"manager_can_view\": \"<boolean>\",\n      \"manager_see_identity\": \"<boolean>\",\n      \"modified_on\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"requested_by\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"responses\": {\n        \"answer\": \"<string>\",\n        \"feedback_id\": \"<integer>\",\n        \"hide_numbers\": \"<boolean>\",\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"question_id\": \"<integer>\",\n        \"question_options\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"question_uuid\": \"<uuid>\",\n        \"type\": \"multiple_choice\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"status\": \"answering\",\n      \"template_name\": \"<string>\",\n      \"template_type\": \"adhoc_manager_request_custom\",\n      \"updated\": \"<float>\",\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"created\": \"<float>\",\n      \"created_by\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"created_on\": \"<dateTime>\",\n      \"cycle\": {\n        \"cycle_end\": \"<date>\",\n        \"cycle_start\": \"<date>\",\n        \"enable_anytime_nomination\": \"<boolean>\",\n        \"feedback_start\": \"<date>\",\n        \"grace_period_end\": \"<date>\",\n        \"id\": \"<integer>\",\n        \"selection_end\": \"<date>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"cycle_id\": \"<integer>\",\n      \"employee_can_view\": \"<boolean>\",\n      \"employee_see_identity\": \"<boolean>\",\n      \"for_user\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"hold_feedback\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"manager_can_view\": \"<boolean>\",\n      \"manager_see_identity\": \"<boolean>\",\n      \"modified_on\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"requested_by\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"responses\": {\n        \"answer\": \"<string>\",\n        \"feedback_id\": \"<integer>\",\n        \"hide_numbers\": \"<boolean>\",\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"question_id\": \"<integer>\",\n        \"question_options\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"question_uuid\": \"<uuid>\",\n        \"type\": \"scale\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"status\": \"answering\",\n      \"template_name\": \"<string>\",\n      \"template_type\": \"adhoc_request_custom\",\n      \"updated\": \"<float>\",\n      \"uuid\": \"<uuid>\"\n    }\n  ]\n}"
						},
						{
							"id": "ae4ed8f1-11d3-4f1a-b837-e8d40ef14abc",
							"name": "Request model validation error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/feedback/?cycle_id=<integer>&delta_end=<dateTime>&delta_start=<dateTime>&for_user_id=<integer>&page=<integer>&size=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"feedback",
										""
									],
									"query": [
										{
											"description": "The feedback cycle ID",
											"key": "cycle_id",
											"value": "<integer>"
										},
										{
											"description": "Filters items modified on or before the given date.             Example: `2021-12-31T23:59:59Z`",
											"key": "delta_end",
											"value": "<dateTime>"
										},
										{
											"description": "Filters items modified on or after the given date.             Example: `2020-01-01T00:00:00Z`",
											"key": "delta_start",
											"value": "<dateTime>"
										},
										{
											"description": "The ID of the user that received feedback",
											"key": "for_user_id",
											"value": "<integer>"
										},
										{
											"description": "Page number to return",
											"key": "page",
											"value": "<integer>"
										},
										{
											"description": "Number of items to return per page",
											"key": "size",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": null
						}
					]
				},
				{
					"name": "Get a list of feedback requests",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "118eefda-f5d6-4e79-a052-4b92c29a488e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a5654612-66d4-4c4f-af4e-a7a5f6b4659f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/feedback/requests/?for_user={{feedback_for_user}}&is_adhoc=true&page=1&questions=false&size=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"feedback",
								"requests",
								""
							],
							"query": [
								{
									"key": "cycle",
									"value": "{{feedback_cycle_id}}",
									"description": "The feedback cycle ID",
									"disabled": true
								},
								{
									"key": "declined",
									"value": "<boolean>",
									"description": "Filter on declined feedback requests",
									"disabled": true
								},
								{
									"key": "delta_end",
									"value": "<dateTime>",
									"description": "Filters items modified on or before the given date.             Example: `2021-12-31T23:59:59Z`",
									"disabled": true
								},
								{
									"key": "delta_start",
									"value": "<dateTime>",
									"description": "Filters items modified on or after the given date.             Example: `2020-01-01T00:00:00Z`",
									"disabled": true
								},
								{
									"key": "for_user",
									"value": "{{feedback_for_user}}",
									"description": "The feedback recipient ID"
								},
								{
									"key": "from_user",
									"value": "<integer>",
									"description": "The feedback provider ID",
									"disabled": true
								},
								{
									"key": "is_adhoc",
									"value": "true",
									"description": "Filter on anytime feedback requests"
								},
								{
									"key": "is_open",
									"value": "<boolean>",
									"description": "Filter on active feedback requests",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number to return"
								},
								{
									"key": "questions",
									"value": "false",
									"description": "Include questions in feedback requests"
								},
								{
									"key": "size",
									"value": "10",
									"description": "Number of items to return per page"
								}
							]
						},
						"description": "Returns a list of feedback requests."
					},
					"response": [
						{
							"id": "b79b7565-0088-42e1-97fc-67ef9a12b870",
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/feedback/requests/?cycle=<integer>&declined=<boolean>&delta_end=<dateTime>&delta_start=<dateTime>&for_user=<integer>&from_user=<integer>&is_adhoc=<boolean>&is_open=<boolean>&page=<integer>&questions=false&size=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"feedback",
										"requests",
										""
									],
									"query": [
										{
											"description": "The feedback cycle ID",
											"key": "cycle",
											"value": "<integer>"
										},
										{
											"description": "Filter on declined feedback requests",
											"key": "declined",
											"value": "<boolean>"
										},
										{
											"description": "Filters items modified on or before the given date.             Example: `2021-12-31T23:59:59Z`",
											"key": "delta_end",
											"value": "<dateTime>"
										},
										{
											"description": "Filters items modified on or after the given date.             Example: `2020-01-01T00:00:00Z`",
											"key": "delta_start",
											"value": "<dateTime>"
										},
										{
											"description": "The feedback recipient ID",
											"key": "for_user",
											"value": "<integer>"
										},
										{
											"description": "The feedback provider ID",
											"key": "from_user",
											"value": "<integer>"
										},
										{
											"description": "Filter on anytime feedback requests",
											"key": "is_adhoc",
											"value": "<boolean>"
										},
										{
											"description": "Filter on active feedback requests",
											"key": "is_open",
											"value": "<boolean>"
										},
										{
											"description": "Page number to return",
											"key": "page",
											"value": "<integer>"
										},
										{
											"description": "Include questions in feedback requests",
											"key": "questions",
											"value": "false"
										},
										{
											"description": "Number of items to return per page",
											"key": "size",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"more\": \"<boolean>\",\n  \"nextUrl\": \"<string>\",\n  \"results\": [\n    {\n      \"adhoc_cycle\": {\n        \"end\": \"<date>\",\n        \"id\": \"<integer>\",\n        \"notification_reminder_date\": \"<date>\",\n        \"questions_locked\": \"<boolean>\",\n        \"start\": \"<date>\",\n        \"template_id\": \"<integer>\",\n        \"template_name\": \"<string>\",\n        \"template_questions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"can_view_feedback\": \"<boolean>\",\n      \"created\": \"<float>\",\n      \"created_by\": {\n        \"about\": \"<string>\",\n        \"attributes\": {\n          \"in__\": \"<string>\",\n          \"quis79\": \"<string>\",\n          \"quis_9\": \"<string>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"custom_values\": {\n          \"aliqua_bf7\": \"<string>\"\n        },\n        \"deactivated_on\": \"<dateTime>\",\n        \"deactivation_date\": \"<date>\",\n        \"department\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"email\": \"<email>\",\n        \"employee_id\": \"<string>\",\n        \"first_name\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"is_active\": \"<boolean>\",\n        \"is_admin\": \"<boolean>\",\n        \"is_goalmaster\": \"<boolean>\",\n        \"is_group_admin\": \"<boolean>\",\n        \"is_super_admin\": \"<boolean>\",\n        \"last_name\": \"<string>\",\n        \"locale\": \"<string>\",\n        \"manager\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"modified_on\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"preferred_name\": \"<string>\",\n        \"title\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"created_on\": \"<dateTime>\",\n      \"custom_note\": \"<string>\",\n      \"cycle\": {\n        \"cycle_end\": \"<date>\",\n        \"cycle_start\": \"<date>\",\n        \"enable_anytime_nomination\": \"<boolean>\",\n        \"feedback_start\": \"<date>\",\n        \"grace_period_end\": \"<date>\",\n        \"id\": \"<integer>\",\n        \"selection_end\": \"<date>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"decline_reason\": \"<string>\",\n      \"declined\": \"<float>\",\n      \"employee_can_view\": \"<boolean>\",\n      \"employee_see_identity\": \"<boolean>\",\n      \"expired\": \"<date>\",\n      \"feedback_id\": \"<integer>\",\n      \"feedback_uuid\": \"<uuid>\",\n      \"for_user\": {\n        \"about\": \"<string>\",\n        \"attributes\": {\n          \"culpa_0e\": \"<string>\",\n          \"eu_4\": \"<string>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"custom_values\": {\n          \"amet0__\": \"<string>\",\n          \"utd\": \"<string>\"\n        },\n        \"deactivated_on\": \"<dateTime>\",\n        \"deactivation_date\": \"<date>\",\n        \"department\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"email\": \"<email>\",\n        \"employee_id\": \"<string>\",\n        \"first_name\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"is_active\": \"<boolean>\",\n        \"is_admin\": \"<boolean>\",\n        \"is_goalmaster\": \"<boolean>\",\n        \"is_group_admin\": \"<boolean>\",\n        \"is_super_admin\": \"<boolean>\",\n        \"last_name\": \"<string>\",\n        \"locale\": \"<string>\",\n        \"manager\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"modified_on\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"preferred_name\": \"<string>\",\n        \"title\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"from_user\": {\n        \"about\": \"<string>\",\n        \"attributes\": {\n          \"aliqua_9c0\": \"<string>\",\n          \"etf\": \"<string>\",\n          \"dolore_1\": \"<string>\",\n          \"est2\": \"<string>\",\n          \"qui_b\": \"<string>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"custom_values\": {\n          \"consequat9\": \"<string>\",\n          \"sintc4\": \"<string>\",\n          \"laborum_8\": \"<string>\"\n        },\n        \"deactivated_on\": \"<dateTime>\",\n        \"deactivation_date\": \"<date>\",\n        \"department\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"email\": \"<email>\",\n        \"employee_id\": \"<string>\",\n        \"first_name\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"is_active\": \"<boolean>\",\n        \"is_admin\": \"<boolean>\",\n        \"is_goalmaster\": \"<boolean>\",\n        \"is_group_admin\": \"<boolean>\",\n        \"is_super_admin\": \"<boolean>\",\n        \"last_name\": \"<string>\",\n        \"locale\": \"<string>\",\n        \"manager\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"modified_on\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"preferred_name\": \"<string>\",\n        \"title\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"hold_feedback\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"manager_can_view\": \"<boolean>\",\n      \"manager_see_identity\": \"<boolean>\",\n      \"modified_on\": \"<dateTime>\",\n      \"question\": \"<string>\",\n      \"questions\": [\n        {\n          \"hide_numbers\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"mandatory\": \"<boolean>\",\n          \"options\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"order\": \"<integer>\",\n          \"template_id\": \"<integer>\",\n          \"text\": \"<string>\",\n          \"type\": \"scale\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"hide_numbers\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"mandatory\": \"<boolean>\",\n          \"options\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"order\": \"<integer>\",\n          \"template_id\": \"<integer>\",\n          \"text\": \"<string>\",\n          \"type\": \"multiple_choice\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"requested_by\": {\n        \"about\": \"<string>\",\n        \"attributes\": {\n          \"etd\": \"<string>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"custom_values\": {\n          \"Lorem_b\": \"<string>\",\n          \"in_0\": \"<string>\",\n          \"tempor_8a5\": \"<string>\"\n        },\n        \"deactivated_on\": \"<dateTime>\",\n        \"deactivation_date\": \"<date>\",\n        \"department\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"email\": \"<email>\",\n        \"employee_id\": \"<string>\",\n        \"first_name\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"is_active\": \"<boolean>\",\n        \"is_admin\": \"<boolean>\",\n        \"is_goalmaster\": \"<boolean>\",\n        \"is_group_admin\": \"<boolean>\",\n        \"is_super_admin\": \"<boolean>\",\n        \"last_name\": \"<string>\",\n        \"locale\": \"<string>\",\n        \"manager\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"modified_on\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"preferred_name\": \"<string>\",\n        \"title\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"responses\": [\n        {\n          \"answer\": \"<string>\",\n          \"feedback_id\": \"<integer>\",\n          \"hide_numbers\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"multiple_choice_answer\": \"<string>\",\n          \"options_answer\": \"<string>\",\n          \"question\": \"<string>\",\n          \"question_id\": \"<integer>\",\n          \"question_options\": \"<string>\",\n          \"rating\": \"<integer>\",\n          \"rating_range\": \"<integer>\",\n          \"type\": \"text\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"answer\": \"<string>\",\n          \"feedback_id\": \"<integer>\",\n          \"hide_numbers\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"multiple_choice_answer\": \"<string>\",\n          \"options_answer\": \"<string>\",\n          \"question\": \"<string>\",\n          \"question_id\": \"<integer>\",\n          \"question_options\": \"<string>\",\n          \"rating\": \"<integer>\",\n          \"rating_range\": \"<integer>\",\n          \"type\": \"text\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"skip_level_can_view\": \"<boolean>\",\n      \"skip_level_managers_level\": \"any\",\n      \"skip_level_see_identity\": \"<boolean>\",\n      \"status\": \"declined\",\n      \"template_id\": \"<integer>\",\n      \"template_uuid\": \"<uuid>\",\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"adhoc_cycle\": {\n        \"end\": \"<date>\",\n        \"id\": \"<integer>\",\n        \"notification_reminder_date\": \"<date>\",\n        \"questions_locked\": \"<boolean>\",\n        \"start\": \"<date>\",\n        \"template_id\": \"<integer>\",\n        \"template_name\": \"<string>\",\n        \"template_questions\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"can_view_feedback\": \"<boolean>\",\n      \"created\": \"<float>\",\n      \"created_by\": {\n        \"about\": \"<string>\",\n        \"attributes\": {\n          \"est_a\": \"<string>\",\n          \"enim_5\": \"<string>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"custom_values\": {\n          \"non89\": \"<string>\",\n          \"ex57f\": \"<string>\"\n        },\n        \"deactivated_on\": \"<dateTime>\",\n        \"deactivation_date\": \"<date>\",\n        \"department\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"email\": \"<email>\",\n        \"employee_id\": \"<string>\",\n        \"first_name\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"is_active\": \"<boolean>\",\n        \"is_admin\": \"<boolean>\",\n        \"is_goalmaster\": \"<boolean>\",\n        \"is_group_admin\": \"<boolean>\",\n        \"is_super_admin\": \"<boolean>\",\n        \"last_name\": \"<string>\",\n        \"locale\": \"<string>\",\n        \"manager\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"modified_on\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"preferred_name\": \"<string>\",\n        \"title\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"created_on\": \"<dateTime>\",\n      \"custom_note\": \"<string>\",\n      \"cycle\": {\n        \"cycle_end\": \"<date>\",\n        \"cycle_start\": \"<date>\",\n        \"enable_anytime_nomination\": \"<boolean>\",\n        \"feedback_start\": \"<date>\",\n        \"grace_period_end\": \"<date>\",\n        \"id\": \"<integer>\",\n        \"selection_end\": \"<date>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"decline_reason\": \"<string>\",\n      \"declined\": \"<float>\",\n      \"employee_can_view\": \"<boolean>\",\n      \"employee_see_identity\": \"<boolean>\",\n      \"expired\": \"<date>\",\n      \"feedback_id\": \"<integer>\",\n      \"feedback_uuid\": \"<uuid>\",\n      \"for_user\": {\n        \"about\": \"<string>\",\n        \"attributes\": {\n          \"aute_7e\": \"<string>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"custom_values\": {\n          \"velitb2\": \"<string>\",\n          \"ut_77e\": \"<string>\",\n          \"pariatur_5e5\": \"<string>\",\n          \"Excepteurfa8\": \"<string>\"\n        },\n        \"deactivated_on\": \"<dateTime>\",\n        \"deactivation_date\": \"<date>\",\n        \"department\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"email\": \"<email>\",\n        \"employee_id\": \"<string>\",\n        \"first_name\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"is_active\": \"<boolean>\",\n        \"is_admin\": \"<boolean>\",\n        \"is_goalmaster\": \"<boolean>\",\n        \"is_group_admin\": \"<boolean>\",\n        \"is_super_admin\": \"<boolean>\",\n        \"last_name\": \"<string>\",\n        \"locale\": \"<string>\",\n        \"manager\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"modified_on\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"preferred_name\": \"<string>\",\n        \"title\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"from_user\": {\n        \"about\": \"<string>\",\n        \"attributes\": {\n          \"irure_404\": \"<string>\",\n          \"voluptate_9\": \"<string>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"custom_values\": {\n          \"magna1b\": \"<string>\",\n          \"occaecat_d_\": \"<string>\"\n        },\n        \"deactivated_on\": \"<dateTime>\",\n        \"deactivation_date\": \"<date>\",\n        \"department\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"email\": \"<email>\",\n        \"employee_id\": \"<string>\",\n        \"first_name\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"is_active\": \"<boolean>\",\n        \"is_admin\": \"<boolean>\",\n        \"is_goalmaster\": \"<boolean>\",\n        \"is_group_admin\": \"<boolean>\",\n        \"is_super_admin\": \"<boolean>\",\n        \"last_name\": \"<string>\",\n        \"locale\": \"<string>\",\n        \"manager\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"modified_on\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"preferred_name\": \"<string>\",\n        \"title\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"hold_feedback\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"manager_can_view\": \"<boolean>\",\n      \"manager_see_identity\": \"<boolean>\",\n      \"modified_on\": \"<dateTime>\",\n      \"question\": \"<string>\",\n      \"questions\": [\n        {\n          \"hide_numbers\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"mandatory\": \"<boolean>\",\n          \"options\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"order\": \"<integer>\",\n          \"template_id\": \"<integer>\",\n          \"text\": \"<string>\",\n          \"type\": \"text\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"hide_numbers\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"mandatory\": \"<boolean>\",\n          \"options\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"order\": \"<integer>\",\n          \"template_id\": \"<integer>\",\n          \"text\": \"<string>\",\n          \"type\": \"multiple_choice\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"requested_by\": {\n        \"about\": \"<string>\",\n        \"attributes\": {\n          \"ipsumdaf\": \"<string>\"\n        },\n        \"created_on\": \"<dateTime>\",\n        \"custom_values\": {\n          \"quifc\": \"<string>\",\n          \"qui_2\": \"<string>\"\n        },\n        \"deactivated_on\": \"<dateTime>\",\n        \"deactivation_date\": \"<date>\",\n        \"department\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"email\": \"<email>\",\n        \"employee_id\": \"<string>\",\n        \"first_name\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"is_active\": \"<boolean>\",\n        \"is_admin\": \"<boolean>\",\n        \"is_goalmaster\": \"<boolean>\",\n        \"is_group_admin\": \"<boolean>\",\n        \"is_super_admin\": \"<boolean>\",\n        \"last_name\": \"<string>\",\n        \"locale\": \"<string>\",\n        \"manager\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        \"modified_on\": \"<dateTime>\",\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"preferred_name\": \"<string>\",\n        \"title\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"responses\": [\n        {\n          \"answer\": \"<string>\",\n          \"feedback_id\": \"<integer>\",\n          \"hide_numbers\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"multiple_choice_answer\": \"<string>\",\n          \"options_answer\": \"<string>\",\n          \"question\": \"<string>\",\n          \"question_id\": \"<integer>\",\n          \"question_options\": \"<string>\",\n          \"rating\": \"<integer>\",\n          \"rating_range\": \"<integer>\",\n          \"type\": \"scale\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"answer\": \"<string>\",\n          \"feedback_id\": \"<integer>\",\n          \"hide_numbers\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"multiple_choice_answer\": \"<string>\",\n          \"options_answer\": \"<string>\",\n          \"question\": \"<string>\",\n          \"question_id\": \"<integer>\",\n          \"question_options\": \"<string>\",\n          \"rating\": \"<integer>\",\n          \"rating_range\": \"<integer>\",\n          \"type\": \"text\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"skip_level_can_view\": \"<boolean>\",\n      \"skip_level_managers_level\": \"none\",\n      \"skip_level_see_identity\": \"<boolean>\",\n      \"status\": \"answering\",\n      \"template_id\": \"<integer>\",\n      \"template_uuid\": \"<uuid>\",\n      \"uuid\": \"<uuid>\"\n    }\n  ]\n}"
						},
						{
							"id": "074f1179-1ba1-4375-a557-614dd5c69ead",
							"name": "Request model validation error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/feedback/requests/?cycle=<integer>&declined=<boolean>&delta_end=<dateTime>&delta_start=<dateTime>&for_user=<integer>&from_user=<integer>&is_adhoc=<boolean>&is_open=<boolean>&page=<integer>&questions=false&size=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"feedback",
										"requests",
										""
									],
									"query": [
										{
											"description": "The feedback cycle ID",
											"key": "cycle",
											"value": "<integer>"
										},
										{
											"description": "Filter on declined feedback requests",
											"key": "declined",
											"value": "<boolean>"
										},
										{
											"description": "Filters items modified on or before the given date.             Example: `2021-12-31T23:59:59Z`",
											"key": "delta_end",
											"value": "<dateTime>"
										},
										{
											"description": "Filters items modified on or after the given date.             Example: `2020-01-01T00:00:00Z`",
											"key": "delta_start",
											"value": "<dateTime>"
										},
										{
											"description": "The feedback recipient ID",
											"key": "for_user",
											"value": "<integer>"
										},
										{
											"description": "The feedback provider ID",
											"key": "from_user",
											"value": "<integer>"
										},
										{
											"description": "Filter on anytime feedback requests",
											"key": "is_adhoc",
											"value": "<boolean>"
										},
										{
											"description": "Filter on active feedback requests",
											"key": "is_open",
											"value": "<boolean>"
										},
										{
											"description": "Page number to return",
											"key": "page",
											"value": "<integer>"
										},
										{
											"description": "Include questions in feedback requests",
											"key": "questions",
											"value": "false"
										},
										{
											"description": "Number of items to return per page",
											"key": "size",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": null
						}
					]
				},
				{
					"name": "Get a list of feedback templates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8618f25-4866-46a8-9715-dfebd9e5fd5a",
								"exec": [
									"//Set collection veriabled from response",
									"pm.test(\"Store values in collection variable\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"feedback_template_id\", jsonData.results[0].id);",
									"    pm.environment.set(\"feedback_template_name\", jsonData.results[0].name);",
									"});",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d098077e-3559-4280-841a-0f034cf70ea9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/feedback/templates/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"feedback",
								"templates",
								""
							],
							"variable": [
								{
									"key": "template_id",
									"value": "{{feedback_template_id}}",
									"description": "(Required) The feedback template ID"
								}
							]
						},
						"description": "Returns a list of feedback templates."
					},
					"response": [
						{
							"id": "87eb14c3-8c8c-4fff-86c5-c1446cf8276c",
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": "{{baseUrl}}/api/v1/feedback/templates/"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"more\": \"<boolean>\",\n  \"nextUrl\": \"<string>\",\n  \"results\": [\n    {\n      \"allowed_employees\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"allowed_providers\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"created\": \"<float>\",\n      \"created_on\": \"<dateTime>\",\n      \"custom_note_enabled\": \"<boolean>\",\n      \"cycles\": [\n        {\n          \"cycle_end\": \"<date>\",\n          \"cycle_start\": \"<date>\",\n          \"enable_anytime_nomination\": \"<boolean>\",\n          \"feedback_start\": \"<date>\",\n          \"grace_period_end\": \"<date>\",\n          \"id\": \"<integer>\",\n          \"selection_end\": \"<date>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"cycle_end\": \"<date>\",\n          \"cycle_start\": \"<date>\",\n          \"enable_anytime_nomination\": \"<boolean>\",\n          \"feedback_start\": \"<date>\",\n          \"grace_period_end\": \"<date>\",\n          \"id\": \"<integer>\",\n          \"selection_end\": \"<date>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"default_provider_type\": \"classic_360\",\n      \"default_providers_includes_directs\": \"<boolean>\",\n      \"default_providers_includes_manager\": \"<boolean>\",\n      \"default_providers_includes_peers\": \"<boolean>\",\n      \"default_providers_limit\": \"<integer>\",\n      \"employee_can_choose\": \"<boolean>\",\n      \"employee_can_view\": \"<boolean>\",\n      \"employee_see_identity\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"hold_feedback\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"manager_can_choose\": \"<boolean>\",\n      \"manager_can_view\": \"<boolean>\",\n      \"manager_see_identity\": \"<boolean>\",\n      \"modified_on\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"notify_cycle_started\": \"<boolean>\",\n      \"notify_feedback_reminder\": \"<boolean>\",\n      \"notify_feedback_requested\": \"<boolean>\",\n      \"questions\": [\n        {\n          \"hide_numbers\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"mandatory\": \"<boolean>\",\n          \"options\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"order\": \"<integer>\",\n          \"template_id\": \"<integer>\",\n          \"text\": \"<string>\",\n          \"type\": \"scale\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"hide_numbers\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"mandatory\": \"<boolean>\",\n          \"options\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"order\": \"<integer>\",\n          \"template_id\": \"<integer>\",\n          \"text\": \"<string>\",\n          \"type\": \"multiple_choice\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"questions_locked\": \"<boolean>\",\n      \"skip_level_can_view\": \"<boolean>\",\n      \"skip_level_managers_level\": \"one\",\n      \"skip_level_see_identity\": \"<boolean>\",\n      \"summary_visible_employee\": \"<boolean>\",\n      \"summary_visible_manager\": \"<boolean>\",\n      \"type\": \"adhoc_request\",\n      \"updated\": \"<float>\",\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"allowed_employees\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"allowed_providers\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"created\": \"<float>\",\n      \"created_on\": \"<dateTime>\",\n      \"custom_note_enabled\": \"<boolean>\",\n      \"cycles\": [\n        {\n          \"cycle_end\": \"<date>\",\n          \"cycle_start\": \"<date>\",\n          \"enable_anytime_nomination\": \"<boolean>\",\n          \"feedback_start\": \"<date>\",\n          \"grace_period_end\": \"<date>\",\n          \"id\": \"<integer>\",\n          \"selection_end\": \"<date>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"cycle_end\": \"<date>\",\n          \"cycle_start\": \"<date>\",\n          \"enable_anytime_nomination\": \"<boolean>\",\n          \"feedback_start\": \"<date>\",\n          \"grace_period_end\": \"<date>\",\n          \"id\": \"<integer>\",\n          \"selection_end\": \"<date>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"default_provider_type\": \"classic_360\",\n      \"default_providers_includes_directs\": \"<boolean>\",\n      \"default_providers_includes_manager\": \"<boolean>\",\n      \"default_providers_includes_peers\": \"<boolean>\",\n      \"default_providers_limit\": \"<integer>\",\n      \"employee_can_choose\": \"<boolean>\",\n      \"employee_can_view\": \"<boolean>\",\n      \"employee_see_identity\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"hold_feedback\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"manager_can_choose\": \"<boolean>\",\n      \"manager_can_view\": \"<boolean>\",\n      \"manager_see_identity\": \"<boolean>\",\n      \"modified_on\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"notify_cycle_started\": \"<boolean>\",\n      \"notify_feedback_reminder\": \"<boolean>\",\n      \"notify_feedback_requested\": \"<boolean>\",\n      \"questions\": [\n        {\n          \"hide_numbers\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"mandatory\": \"<boolean>\",\n          \"options\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"order\": \"<integer>\",\n          \"template_id\": \"<integer>\",\n          \"text\": \"<string>\",\n          \"type\": \"scale\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"hide_numbers\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"mandatory\": \"<boolean>\",\n          \"options\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"order\": \"<integer>\",\n          \"template_id\": \"<integer>\",\n          \"text\": \"<string>\",\n          \"type\": \"text\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"questions_locked\": \"<boolean>\",\n      \"skip_level_can_view\": \"<boolean>\",\n      \"skip_level_managers_level\": \"none\",\n      \"skip_level_see_identity\": \"<boolean>\",\n      \"summary_visible_employee\": \"<boolean>\",\n      \"summary_visible_manager\": \"<boolean>\",\n      \"type\": \"scheduled\",\n      \"updated\": \"<float>\",\n      \"uuid\": \"<uuid>\"\n    }\n  ]\n}"
						},
						{
							"id": "c3f8aac9-5804-4df5-b51e-0644fbb412c0",
							"name": "Request model validation error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": "{{baseUrl}}/api/v1/feedback/templates/"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": null
						}
					]
				},
				{
					"name": "Get a feedback template",
					"id": "764a513a-09e1-4497-8042-8c5fde7f2642",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/feedback/templates/:template_id/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"feedback",
								"templates",
								":template_id",
								""
							],
							"variable": [
								{
									"key": "template_id",
									"value": "{{feedback_template_id}}"
								}
							]
						},
						"description": "Returns a feedback template."
					},
					"response": [
						{
							"id": "79461f67-a3f3-462c-a0e7-ae5beffa8c19",
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/feedback/templates/:template_id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"feedback",
										"templates",
										":template_id",
										""
									],
									"variable": [
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"allowed_employees\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"uuid\": \"<uuid>\"\n    }\n  ],\n  \"allowed_providers\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"uuid\": \"<uuid>\"\n    }\n  ],\n  \"created\": \"<float>\",\n  \"created_on\": \"<dateTime>\",\n  \"custom_note_enabled\": \"<boolean>\",\n  \"cycles\": [\n    {\n      \"cycle_end\": \"<date>\",\n      \"cycle_start\": \"<date>\",\n      \"enable_anytime_nomination\": \"<boolean>\",\n      \"feedback_start\": \"<date>\",\n      \"grace_period_end\": \"<date>\",\n      \"id\": \"<integer>\",\n      \"selection_end\": \"<date>\",\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"cycle_end\": \"<date>\",\n      \"cycle_start\": \"<date>\",\n      \"enable_anytime_nomination\": \"<boolean>\",\n      \"feedback_start\": \"<date>\",\n      \"grace_period_end\": \"<date>\",\n      \"id\": \"<integer>\",\n      \"selection_end\": \"<date>\",\n      \"uuid\": \"<uuid>\"\n    }\n  ],\n  \"default_provider_type\": \"classic_360\",\n  \"default_providers_includes_directs\": \"<boolean>\",\n  \"default_providers_includes_manager\": \"<boolean>\",\n  \"default_providers_includes_peers\": \"<boolean>\",\n  \"default_providers_limit\": \"<integer>\",\n  \"employee_can_choose\": \"<boolean>\",\n  \"employee_can_view\": \"<boolean>\",\n  \"employee_see_identity\": \"<boolean>\",\n  \"enabled\": \"<boolean>\",\n  \"hold_feedback\": \"<boolean>\",\n  \"id\": \"<integer>\",\n  \"manager_can_choose\": \"<boolean>\",\n  \"manager_can_view\": \"<boolean>\",\n  \"manager_see_identity\": \"<boolean>\",\n  \"modified_on\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"notify_cycle_started\": \"<boolean>\",\n  \"notify_feedback_reminder\": \"<boolean>\",\n  \"notify_feedback_requested\": \"<boolean>\",\n  \"questions\": [\n    {\n      \"hide_numbers\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"mandatory\": \"<boolean>\",\n      \"options\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"order\": \"<integer>\",\n      \"template_id\": \"<integer>\",\n      \"text\": \"<string>\",\n      \"type\": \"scale\",\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"hide_numbers\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"mandatory\": \"<boolean>\",\n      \"options\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"order\": \"<integer>\",\n      \"template_id\": \"<integer>\",\n      \"text\": \"<string>\",\n      \"type\": \"scale\",\n      \"uuid\": \"<uuid>\"\n    }\n  ],\n  \"questions_locked\": \"<boolean>\",\n  \"skip_level_can_view\": \"<boolean>\",\n  \"skip_level_managers_level\": \"none\",\n  \"skip_level_see_identity\": \"<boolean>\",\n  \"summary_visible_employee\": \"<boolean>\",\n  \"summary_visible_manager\": \"<boolean>\",\n  \"type\": \"scheduled\",\n  \"updated\": \"<float>\",\n  \"uuid\": \"<uuid>\"\n}"
						},
						{
							"id": "e7752150-ff56-4684-b632-7fdc2f11bb86",
							"name": "Request model validation error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/feedback/templates/:template_id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"feedback",
										"templates",
										":template_id",
										""
									],
									"variable": [
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": null
						}
					]
				},
				{
					"name": "Get a list of employees",
					"id": "ab78c720-7080-4b1d-aeb0-746b435f09d6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/feedback/templates/:template_id/employees?page=1&size=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"feedback",
								"templates",
								":template_id",
								"employees"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number to return"
								},
								{
									"key": "size",
									"value": "10",
									"description": "Number of items to return per page"
								}
							],
							"variable": [
								{
									"key": "template_id",
									"value": "{{feedback_template_id}}"
								}
							]
						},
						"description": "Returns a list of employees associated with a feedback template."
					},
					"response": [
						{
							"id": "e6b43e2e-a182-46cc-8588-0770a8678e0c",
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/feedback/templates/:template_id/employees?page=<integer>&size=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"feedback",
										"templates",
										":template_id",
										"employees"
									],
									"query": [
										{
											"description": "Page number to return",
											"key": "page",
											"value": "<integer>"
										},
										{
											"description": "Number of items to return per page",
											"key": "size",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"more\": \"<boolean>\",\n  \"nextUrl\": \"<string>\",\n  \"results\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"uuid\": \"<uuid>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a list of providers",
					"id": "889f4b07-a48a-4013-b95f-be1825a7675a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/feedback/templates/:template_id/providers?page=1&size=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"feedback",
								"templates",
								":template_id",
								"providers"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number to return"
								},
								{
									"key": "size",
									"value": "10",
									"description": "Number of items to return per page"
								}
							],
							"variable": [
								{
									"key": "template_id",
									"value": "{{feedback_template_id}}"
								}
							]
						},
						"description": "Returns a list of providers associated with a feedback template."
					},
					"response": [
						{
							"id": "271e13f7-a5cb-4876-b0a5-e909f1e28bc1",
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/feedback/templates/:template_id/providers?page=<integer>&size=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"feedback",
										"templates",
										":template_id",
										"providers"
									],
									"query": [
										{
											"description": "Page number to return",
											"key": "page",
											"value": "<integer>"
										},
										{
											"description": "Number of items to return per page",
											"key": "size",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "template_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"more\": \"<boolean>\",\n  \"nextUrl\": \"<string>\",\n  \"results\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"uuid\": \"<uuid>\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "85cc82e1-4f93-4d42-9b36-b2e8283796e8",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4d70e1bc-3d15-4160-af54-67a06034b28c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "41f5fa68-8b2a-4b9d-aeae-5261956218f1",
						"type": "text/javascript",
						"exec": [
							"// Test error handling by sending a request to a non-existent endpoint",
							"",
							"pm.sendRequest({",
							"    url: \"http://rainforest.betterworks.com/api/v1/feedbackss\",",
							"    method: \"GET\",",
							"    header: {",
							"    Authorization : pm.environment.get(\"Authorization\")",
							"    }",
							"    ",
							"}, function (err, response) {",
							"    pm.test(\"Error handling: status code is 404\", function () {",
							"        pm.expect(response).to.have.status(404);",
							"    });",
							"});",
							"",
							"// pm.sendRequest({",
							"//     url: pm.request.url,",
							"//     method: \"GET\",",
							"//     header: {",
							"//     Authorization : pm.environment.get(\"non_Manager_Auth\")",
							"//     }",
							"// }, function (err, response) {",
							"//     pm.test(\"Verify Authorization for non-Manager: status code is 403 in case of non-admin user's id is passed\", function () {",
							"//         pm.expect(response).to.have.status(403);",
							"//     });",
							"// });"
						]
					}
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "Create or update multiple users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2ee1997b-802c-43d9-870e-8479c136e413",
								"exec": [
									"var first_name = pm.variables.replaceIn(\"{{$randomFirstName}}\"); ",
									"pm.environment.set(\"userFirstName\", first_name);",
									"",
									"var last_name = pm.variables.replaceIn(\"{{$randomLastName}}\"); ",
									"pm.environment.set(\"userLastName\", last_name);",
									"",
									"var email = pm.environment.set(\"userEmail\", first_name + '_' + last_name + '@aks.com');",
									"",
									"var department_name = pm.variables.replaceIn(\"{{$randomDepartment}}\"); ",
									"pm.environment.set(\"userDepartment_name\", department_name);",
									"",
									"var phone = pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"); ",
									"pm.environment.set(\"userPhoneNumber\", phone);",
									"",
									"var location = pm.variables.replaceIn(\"{{$randomCountry}}\"); ",
									"pm.environment.set(\"userLocation\", location);",
									"",
									"// ----------------------------------------------------------------------------------------------------------",
									"",
									"var first_name = pm.variables.replaceIn(\"{{$randomFirstName}}\"); ",
									"pm.environment.set(\"userFirstName2\", first_name);",
									"",
									"var last_name = pm.variables.replaceIn(\"{{$randomLastName}}\"); ",
									"pm.environment.set(\"userLastName2\", last_name);",
									"",
									"var email = pm.environment.set(\"userEmail2\", first_name + '_' + last_name + '@aks.com');",
									"",
									"var department_name = pm.variables.replaceIn(\"{{$randomDepartment}}\"); ",
									"pm.environment.set(\"userDepartment_name2\", department_name);",
									"",
									"var phone = pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"); ",
									"pm.environment.set(\"userPhoneNumber2\", phone);",
									"",
									"var location = pm.variables.replaceIn(\"{{$randomCountry}}\"); ",
									"pm.environment.set(\"userLocation2\", location);",
									"",
									"// ----------------------------------------------------------------------------------------------------------",
									"",
									"var first_name = pm.variables.replaceIn(\"{{$randomFirstName}}\"); ",
									"pm.environment.set(\"userFirstName3\", first_name);",
									"",
									"var last_name = pm.variables.replaceIn(\"{{$randomLastName}}\"); ",
									"pm.environment.set(\"userLastName3\", last_name);",
									"",
									"var email = pm.environment.set(\"userEmail3\", first_name + '_' + last_name + '@aks.com');",
									"",
									"var department_name = pm.variables.replaceIn(\"{{$randomDepartment}}\"); ",
									"pm.environment.set(\"userDepartment_name3\", department_name);",
									"",
									"var phone = pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"); ",
									"pm.environment.set(\"userPhoneNumber3\", phone);",
									"",
									"var location = pm.variables.replaceIn(\"{{$randomCountry}}\"); ",
									"pm.environment.set(\"userLocation3\", location);",
									"",
									"// ----------------------------------------------------------------------------------------------------------",
									"",
									"var first_name = pm.variables.replaceIn(\"{{$randomFirstName}}\"); ",
									"pm.environment.set(\"userFirstName4\", first_name);",
									"",
									"var last_name = pm.variables.replaceIn(\"{{$randomLastName}}\"); ",
									"pm.environment.set(\"userLastName4\", last_name);",
									"",
									"var email = pm.environment.set(\"userEmail4\", first_name + '_' + last_name + '@aks.com');",
									"",
									"var department_name = pm.variables.replaceIn(\"{{$randomDepartment}}\"); ",
									"pm.environment.set(\"userDepartment_name4\", department_name);",
									"",
									"var phone = pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"); ",
									"pm.environment.set(\"userPhoneNumber4\", phone);",
									"",
									"var location = pm.variables.replaceIn(\"{{$randomCountry}}\"); ",
									"pm.environment.set(\"userLocation4\", location);",
									"",
									"// ----------------------------------------------------------------------------------------------------------",
									"",
									"var first_name = pm.variables.replaceIn(\"{{$randomFirstName}}\"); ",
									"pm.environment.set(\"userFirstName5\", first_name);",
									"",
									"var last_name = pm.variables.replaceIn(\"{{$randomLastName}}\"); ",
									"pm.environment.set(\"userLastName5\", last_name);",
									"",
									"var email = pm.environment.set(\"userEmail5\", first_name + '_' + last_name + '@aks.com');",
									"",
									"var department_name = pm.variables.replaceIn(\"{{$randomDepartment}}\"); ",
									"pm.environment.set(\"userDepartment_name5\", department_name);",
									"",
									"var phone = pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"); ",
									"pm.environment.set(\"userPhoneNumber5\", phone);",
									"",
									"var location = pm.variables.replaceIn(\"{{$randomCountry}}\"); ",
									"pm.environment.set(\"userLocation5\", location);",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "03620b69-1bde-415f-8a25-909bc2907831",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "eaab2a71-a6d7-4003-bd71-18a581c837ce",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"users\": [\n    {\n      \"first_name\": \"{{userFirstName}}\",\n      \"last_name\": \"{{userLastName}}\",\n      \"email\": \"{{userEmail}}\",\n      \"department_name\" : \"{{userDepartment_name}}\",\n      \"is_active\": true,\n      \"phone\": \"{{userPhoneNumber}}\",\n      \"location\":\"{{userLocation}}\"\n    },\n    {\n      \"first_name\": \"{{userFirstName2}}\",\n      \"last_name\": \"{{userLastName2}}\",\n      \"email\": \"{{userEmail2}}\",\n      \"department_name\" : \"{{userDepartment_name2}}\",\n      \"is_active\": true,\n      \"phone\": \"{{userPhoneNumber2}}\",\n      \"location\":\"{{userLocation2}}\"\n    },\n    {\n      \"first_name\": \"{{userFirstName3}}\",\n      \"last_name\": \"{{userLastName3}}\",\n      \"email\": \"{{userEmail3}}\",\n      \"department_name\" : \"{{userDepartment_name3}}\",\n      \"is_active\": true,\n      \"phone\": \"{{userPhoneNumber3}}\",\n      \"location\":\"{{userLocation3}}\"\n    },\n    {\n      \"first_name\": \"{{userFirstName4}}\",\n      \"last_name\": \"{{userLastName4}}\",\n      \"email\": \"{{userEmail4}}\",\n      \"department_name\" : \"{{userDepartment_name4}}\",\n      \"is_active\": true,\n      \"phone\": \"{{userPhoneNumber4}}\",\n      \"location\":\"{{userLocation4}}\"\n    },\n    {\n      \"first_name\": \"{{userFirstName5}}\",\n      \"last_name\": \"{{userLastName5}}\",\n      \"email\": \"{{userEmail5}}\",\n      \"department_name\" : \"{{userDepartment_name5}}\",\n      \"is_active\": true,\n      \"phone\": \"{{userPhoneNumber5}}\",\n      \"location\":\"{{userLocation5}}\"\n    }\n    \n  ]\n\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/v1/users/bulk/",
						"description": "Returns the number of created and updated users.\n            <div style=\"padding: 10px; background: #fbe5e1; width: fit-content; border-radius: 10px; margin-bottom: 16px\">This resource does not support bulk delete.</div>\n            <div style=\"padding: 10px; background: #f0f8ff; width: fit-content; border-radius: 10px;\">\n            <strong>Clear Values with BW_NULL:</strong>\n            <ul><li>first_name, last_name, and email can never be `BW_NULL`</li>\n            <li>preferred_name can be `BW_NULL` but the user will fall back to first_name when preferred_name is absent</li>\n            <li>manager_id or manager_email can be `BW_NULL` and will cause both values to be cleared out and removed from the pending user (matches preexisting logic for passing empty string for both of these fields)</li>\n            <li>employee_id can be `BW_NULL` on create but NOT on update (matches preexisting logic for empty string handling)</li>\n            <li>locale can be `BW_NULL` and will clear the record entry but the user will fall back to the org locale if the user locale is empty (matches preexisting logic for empty string handling)</li>\n            <li>If `BW_NULL` is provided for is_active then the field value will default to True</li>\n            <li>If `BW_NULL` is provided for terminated then terminated will default to False, resulting in is_active defaulting to True</li>\n            <li>If `BW_NULL` is provided for deactivation_date then deactivation_date will return True, resulting in is_active being True</li></ul>\n            </div>"
					},
					"response": [
						{
							"id": "d8fe40a0-0a49-4e94-9160-3fb0f838e2bf",
							"name": "Successful response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"users\": [\n    {\n      \"email\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"employee_id\": \"<string>\",\n      \"department_name\": \"<string>\",\n      \"title\": \"<string>\",\n      \"manager_id\": \"<string>\",\n      \"manager_email\": \"<string>\",\n      \"is_active\": \"<boolean>\",\n      \"phone\": \"<string>\",\n      \"location\": \"<string>\",\n      \"preferred_name\": \"<string>\",\n      \"on_leave\": \"<boolean>\",\n      \"matrix_manager\": \"<string>\",\n      \"locale\": \"nl\",\n      \"custom_01\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"employee_id\": \"<string>\",\n      \"department_name\": \"<string>\",\n      \"title\": \"<string>\",\n      \"manager_id\": \"<string>\",\n      \"manager_email\": \"<string>\",\n      \"is_active\": \"<boolean>\",\n      \"phone\": \"<string>\",\n      \"location\": \"<string>\",\n      \"preferred_name\": \"<string>\",\n      \"on_leave\": \"<boolean>\",\n      \"matrix_manager\": \"<string>\",\n      \"locale\": \"th\",\n      \"custom_01\": \"<string>\"\n    }\n  ],\n  \"dry_run\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v1/users/bulk/"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"created_count\": \"<integer>\",\n  \"deactivated_count\": \"<integer>\",\n  \"dry_run\": \"<boolean>\",\n  \"errors\": [\n    {\n      \"employee_id\": \"<string>\",\n      \"error_details\": [\n        {\n          \"description\": \"<string>\"\n        },\n        {\n          \"description\": \"<string>\"\n        }\n      ],\n      \"first_name\": \"<string>\",\n      \"index\": \"<integer>\",\n      \"last_name\": \"<string>\",\n      \"processed\": \"<boolean>\"\n    },\n    {\n      \"employee_id\": \"<string>\",\n      \"error_details\": [\n        {\n          \"description\": \"<string>\"\n        },\n        {\n          \"description\": \"<string>\"\n        }\n      ],\n      \"first_name\": \"<string>\",\n      \"index\": \"<integer>\",\n      \"last_name\": \"<string>\",\n      \"processed\": \"<boolean>\"\n    }\n  ],\n  \"reactivated_count\": \"<integer>\",\n  \"updated_count\": \"<integer>\"\n}"
						},
						{
							"id": "97a87c66-20a4-4054-97e8-8342cbdc87e9",
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"users\": [\n    {\n      \"email\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"employee_id\": \"<string>\",\n      \"department_name\": \"<string>\",\n      \"title\": \"<string>\",\n      \"manager_id\": \"<string>\",\n      \"manager_email\": \"<string>\",\n      \"is_active\": \"<boolean>\",\n      \"phone\": \"<string>\",\n      \"location\": \"<string>\",\n      \"preferred_name\": \"<string>\",\n      \"on_leave\": \"<boolean>\",\n      \"matrix_manager\": \"<string>\",\n      \"locale\": \"nl\",\n      \"custom_01\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"employee_id\": \"<string>\",\n      \"department_name\": \"<string>\",\n      \"title\": \"<string>\",\n      \"manager_id\": \"<string>\",\n      \"manager_email\": \"<string>\",\n      \"is_active\": \"<boolean>\",\n      \"phone\": \"<string>\",\n      \"location\": \"<string>\",\n      \"preferred_name\": \"<string>\",\n      \"on_leave\": \"<boolean>\",\n      \"matrix_manager\": \"<string>\",\n      \"locale\": \"th\",\n      \"custom_01\": \"<string>\"\n    }\n  ],\n  \"dry_run\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v1/users/bulk/"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Search for users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "30e6ab34-8e3f-4ef5-83f0-5b37b60bed99",
								"exec": [
									"// //Set collection veriabled from response",
									"// pm.test(\"Store values in collection variable\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.environment.set(\"user_id\", jsonData.results[0].id);",
									"//     pm.environment.set(\"userFirstName\", jsonData.results[0].first_name);",
									"//     pm.environment.set(\"userLastName\", jsonData.results[0].last_name);",
									"//     pm.environment.set(\"userEmail\", jsonData.results[0].email);",
									"",
									"    ",
									"//     pm.environment.set(\"user_id2\", jsonData.results[1].id);",
									"//     pm.environment.set(\"userFirstName2\", jsonData.results[1].first_name);",
									"//     pm.environment.set(\"userLastName2\", jsonData.results[1].last_name);",
									"//     pm.environment.set(\"userEmail2\", jsonData.results[1].email);",
									"",
									"//     pm.environment.set(\"user_id3\", jsonData.results[2].id);",
									"//     pm.environment.set(\"userFirstName3\", jsonData.results[2].first_name);",
									"//     pm.environment.set(\"userLastName3\", jsonData.results[2].last_name);",
									"//     pm.environment.set(\"userEmail3\", jsonData.results[2].email);",
									"",
									"//     pm.environment.set(\"user_id4\", jsonData.results[3].id);",
									"//     pm.environment.set(\"userFirstName4\", jsonData.results[3].first_name);",
									"//     pm.environment.set(\"userLastName4\", jsonData.results[3].last_name);",
									"//     pm.environment.set(\"userEmail4\", jsonData.results[3].email);",
									"",
									"//     pm.environment.set(\"user_id5\", jsonData.results[4].id);",
									"//     pm.environment.set(\"userFirstName5\", jsonData.results[4].first_name);",
									"//     pm.environment.set(\"userLastName5\", jsonData.results[4].last_name);",
									"//     pm.environment.set(\"userEmail5\", jsonData.results[4].email);",
									"",
									"// });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "67159aa3-f6ea-47b0-b1f4-088c03e969ba",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/search/?size=10&page=1&q=Gua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"search",
								""
							],
							"query": [
								{
									"key": "can_view_goal_id",
									"value": "<integer>",
									"description": "Append \"can_view\" to each user in the response if that user has\n                    permission to view the specified goal.",
									"disabled": true
								},
								{
									"key": "feedback_cycle_id",
									"value": "<integer>",
									"description": "Append the number of feedback requests per user in a given cycle.",
									"disabled": true
								},
								{
									"key": "manager_id",
									"value": "<integer>",
									"description": "Search for users by their manager&#39;s ID",
									"disabled": true
								},
								{
									"key": "stats",
									"value": "<boolean>",
									"description": "Append goal statistics to each user in the response.",
									"disabled": true
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "q",
									"value": "Gua"
								}
							]
						},
						"description": "Returns a list of users matching the search criteria.\n            <strong>Matches on full name and username.</strong>"
					},
					"response": [
						{
							"id": "20777867-b2eb-4049-8fd8-741f36f68b9f",
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/users/search/?can_view_goal_id=<integer>&deactivated=false&feedback_cycle_id=<integer>&manager_id=<integer>&q=<string>&stats=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"search",
										""
									],
									"query": [
										{
											"description": "Append \"can_view\" to each user in the response if that user has\n                    permission to view the specified goal.",
											"key": "can_view_goal_id",
											"value": "<integer>"
										},
										{
											"description": "Search for users that are deactivated",
											"key": "deactivated",
											"value": "false"
										},
										{
											"description": "Append the number of feedback requests per user in a given cycle.",
											"key": "feedback_cycle_id",
											"value": "<integer>"
										},
										{
											"description": "Search for users by their manager&#39;s ID",
											"key": "manager_id",
											"value": "<integer>"
										},
										{
											"description": "(Required) Query string matching user&#39;s full name or email",
											"key": "q",
											"value": "<string>"
										},
										{
											"description": "Append goal statistics to each user in the response.",
											"key": "stats",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"more\": \"<boolean>\",\n  \"nextUrl\": \"<string>\",\n  \"results\": [\n    {\n      \"about\": \"<string>\",\n      \"attributes\": {\n        \"est2\": \"<string>\"\n      },\n      \"created_on\": \"<dateTime>\",\n      \"custom_values\": {\n        \"occaecat_e3\": \"<string>\",\n        \"veniam_d2\": \"<string>\"\n      },\n      \"deactivated_on\": \"<dateTime>\",\n      \"deactivation_date\": \"<date>\",\n      \"department\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"email\": \"<email>\",\n      \"employee_id\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"is_active\": \"<boolean>\",\n      \"is_admin\": \"<boolean>\",\n      \"is_goalmaster\": \"<boolean>\",\n      \"is_group_admin\": \"<boolean>\",\n      \"is_super_admin\": \"<boolean>\",\n      \"last_name\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"manager\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"modified_on\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"preferred_name\": \"<string>\",\n      \"title\": \"<string>\",\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"about\": \"<string>\",\n      \"attributes\": {\n        \"eiusmod54\": \"<string>\"\n      },\n      \"created_on\": \"<dateTime>\",\n      \"custom_values\": {\n        \"in_d60\": \"<string>\"\n      },\n      \"deactivated_on\": \"<dateTime>\",\n      \"deactivation_date\": \"<date>\",\n      \"department\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"email\": \"<email>\",\n      \"employee_id\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"is_active\": \"<boolean>\",\n      \"is_admin\": \"<boolean>\",\n      \"is_goalmaster\": \"<boolean>\",\n      \"is_group_admin\": \"<boolean>\",\n      \"is_super_admin\": \"<boolean>\",\n      \"last_name\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"manager\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"modified_on\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"preferred_name\": \"<string>\",\n      \"title\": \"<string>\",\n      \"uuid\": \"<uuid>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Search for users Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "30e6ab34-8e3f-4ef5-83f0-5b37b60bed99",
								"exec": [
									"//Set collection veriabled from response",
									"pm.test(\"Store values in collection variable\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"user_id\", jsonData.results[0].id);",
									"    pm.environment.set(\"userFirstName\", jsonData.results[0].first_name);",
									"    pm.environment.set(\"userLastName\", jsonData.results[0].last_name);",
									"    pm.environment.set(\"userEmail\", jsonData.results[0].email);",
									"",
									"    ",
									"    pm.environment.set(\"user_id2\", jsonData.results[1].id);",
									"    pm.environment.set(\"userFirstName2\", jsonData.results[1].first_name);",
									"    pm.environment.set(\"userLastName2\", jsonData.results[1].last_name);",
									"    pm.environment.set(\"userEmail2\", jsonData.results[1].email);",
									"",
									"    pm.environment.set(\"user_id3\", jsonData.results[2].id);",
									"    pm.environment.set(\"userFirstName3\", jsonData.results[2].first_name);",
									"    pm.environment.set(\"userLastName3\", jsonData.results[2].last_name);",
									"    pm.environment.set(\"userEmail3\", jsonData.results[2].email);",
									"",
									"    pm.environment.set(\"user_id4\", jsonData.results[3].id);",
									"    pm.environment.set(\"userFirstName4\", jsonData.results[3].first_name);",
									"    pm.environment.set(\"userLastName4\", jsonData.results[3].last_name);",
									"    pm.environment.set(\"userEmail4\", jsonData.results[3].email);",
									"",
									"    pm.environment.set(\"user_id5\", jsonData.results[4].id);",
									"    pm.environment.set(\"userFirstName5\", jsonData.results[4].first_name);",
									"    pm.environment.set(\"userLastName5\", jsonData.results[4].last_name);",
									"    pm.environment.set(\"userEmail5\", jsonData.results[4].email);",
									"",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3b99321c-823e-4e26-ad3f-fcd6334c345f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/search/?size=10&page=2&q=aaka",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"search",
								""
							],
							"query": [
								{
									"key": "can_view_goal_id",
									"value": "<integer>",
									"description": "Append \"can_view\" to each user in the response if that user has\n                    permission to view the specified goal.",
									"disabled": true
								},
								{
									"key": "feedback_cycle_id",
									"value": "<integer>",
									"description": "Append the number of feedback requests per user in a given cycle.",
									"disabled": true
								},
								{
									"key": "manager_id",
									"value": "<integer>",
									"description": "Search for users by their manager&#39;s ID",
									"disabled": true
								},
								{
									"key": "stats",
									"value": "<boolean>",
									"description": "Append goal statistics to each user in the response.",
									"disabled": true
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "page",
									"value": "2"
								},
								{
									"key": "q",
									"value": "aaka"
								}
							]
						},
						"description": "Returns a list of users matching the search criteria.\n            <strong>Matches on full name and username.</strong>"
					},
					"response": [
						{
							"id": "7ae1a776-5398-4856-9190-fa306fd7f1f5",
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/users/search/?can_view_goal_id=<integer>&deactivated=false&feedback_cycle_id=<integer>&manager_id=<integer>&q=<string>&stats=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"search",
										""
									],
									"query": [
										{
											"description": "Append \"can_view\" to each user in the response if that user has\n                    permission to view the specified goal.",
											"key": "can_view_goal_id",
											"value": "<integer>"
										},
										{
											"description": "Search for users that are deactivated",
											"key": "deactivated",
											"value": "false"
										},
										{
											"description": "Append the number of feedback requests per user in a given cycle.",
											"key": "feedback_cycle_id",
											"value": "<integer>"
										},
										{
											"description": "Search for users by their manager&#39;s ID",
											"key": "manager_id",
											"value": "<integer>"
										},
										{
											"description": "(Required) Query string matching user&#39;s full name or email",
											"key": "q",
											"value": "<string>"
										},
										{
											"description": "Append goal statistics to each user in the response.",
											"key": "stats",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"more\": \"<boolean>\",\n  \"nextUrl\": \"<string>\",\n  \"results\": [\n    {\n      \"about\": \"<string>\",\n      \"attributes\": {\n        \"est2\": \"<string>\"\n      },\n      \"created_on\": \"<dateTime>\",\n      \"custom_values\": {\n        \"occaecat_e3\": \"<string>\",\n        \"veniam_d2\": \"<string>\"\n      },\n      \"deactivated_on\": \"<dateTime>\",\n      \"deactivation_date\": \"<date>\",\n      \"department\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"email\": \"<email>\",\n      \"employee_id\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"is_active\": \"<boolean>\",\n      \"is_admin\": \"<boolean>\",\n      \"is_goalmaster\": \"<boolean>\",\n      \"is_group_admin\": \"<boolean>\",\n      \"is_super_admin\": \"<boolean>\",\n      \"last_name\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"manager\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"modified_on\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"preferred_name\": \"<string>\",\n      \"title\": \"<string>\",\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"about\": \"<string>\",\n      \"attributes\": {\n        \"eiusmod54\": \"<string>\"\n      },\n      \"created_on\": \"<dateTime>\",\n      \"custom_values\": {\n        \"in_d60\": \"<string>\"\n      },\n      \"deactivated_on\": \"<dateTime>\",\n      \"deactivation_date\": \"<date>\",\n      \"department\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"email\": \"<email>\",\n      \"employee_id\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"is_active\": \"<boolean>\",\n      \"is_admin\": \"<boolean>\",\n      \"is_goalmaster\": \"<boolean>\",\n      \"is_group_admin\": \"<boolean>\",\n      \"is_super_admin\": \"<boolean>\",\n      \"last_name\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"manager\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"modified_on\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"preferred_name\": \"<string>\",\n      \"title\": \"<string>\",\n      \"uuid\": \"<uuid>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df343b51-efa0-4e9e-aa80-54d27a682c0e",
								"exec": [
									"// Test the response body",
									"pm.test(\"Response body is valid\", function () {",
									"    var jsonData = pm.response.json();",
									" ",
									"    pm.expect(jsonData).to.have.property(\"first_name\", pm.environment.get(\"userFirstName\"));",
									"    pm.expect(jsonData).to.have.property(\"last_name\", pm.environment.get(\"userLastName\"));",
									"    ",
									"});",
									"",
									"",
									"// =======",
									"",
									"// Get the current time in milliseconds",
									"const currentTime = new Date().getTime();",
									"",
									"// Set the offset in milliseconds (5 minutes = 300,000 milliseconds)",
									"const offset = 400000;",
									"",
									"// Subtract the offset from the current time",
									"const timestamp = new Date(currentTime - offset);",
									"",
									"// Convert the timestamp to ISO format",
									"const isoTimestamp = timestamp.toISOString();",
									"pm.environment.set(\"timestamp\", isoTimestamp);",
									"// Log the ISO timestamp to the console",
									"console.log(isoTimestamp);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1fd2cb2f-77b9-497d-af87-3eac31143b08",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0ffe51e0-7207-4c52-a7ac-6125fe72e82c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/{{user_id}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user_id}}",
								""
							],
							"query": [
								{
									"key": "delta_start",
									"value": "{{timestamp}}",
									"disabled": true
								}
							]
						},
						"description": "Returns a user."
					},
					"response": [
						{
							"id": "6da07e57-a083-4743-8fa2-67f30a852029",
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/users/:user_id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":user_id",
										""
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"about\": \"<string>\",\n  \"attributes\": {\n    \"eiusmod__2\": \"<string>\",\n    \"reprehenderit0\": \"<string>\",\n    \"minim_f6\": \"<string>\"\n  },\n  \"created_on\": \"<dateTime>\",\n  \"custom_values\": {\n    \"elit_68\": \"<string>\",\n    \"reprehenderit_94f\": \"<string>\"\n  },\n  \"deactivated_on\": \"<dateTime>\",\n  \"deactivation_date\": \"<date>\",\n  \"department\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"uuid\": \"<uuid>\"\n  },\n  \"email\": \"<email>\",\n  \"employee_id\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"is_active\": \"<boolean>\",\n  \"is_admin\": \"<boolean>\",\n  \"is_goalmaster\": \"<boolean>\",\n  \"is_group_admin\": \"<boolean>\",\n  \"is_super_admin\": \"<boolean>\",\n  \"last_name\": \"<string>\",\n  \"locale\": \"<string>\",\n  \"manager\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"uuid\": \"<uuid>\"\n  },\n  \"modified_on\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"preferred_name\": \"<string>\",\n  \"title\": \"<string>\",\n  \"uuid\": \"<uuid>\"\n}"
						}
					]
				},
				{
					"name": "Get a list of users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f84efecb-eb9e-4e49-8dc1-5eeec9240841",
								"exec": [
									"let expectedNames = [",
									"  pm.environment.get(\"userFirstName\"),",
									"  pm.environment.get(\"userFirstName2\"),",
									"  pm.environment.get(\"userFirstName3\"),",
									"  pm.environment.get(\"userFirstName4\"),",
									"  pm.environment.get(\"userFirstName5\")",
									"];",
									"",
									"console.log(expectedNames);",
									"var jsonData = pm.response.json();",
									"let firstNames = []",
									"jsonData.results.forEach(function(result) {",
									"  firstNames.push(result.first_name);",
									"});",
									"",
									"console.log(firstNames);",
									"",
									"",
									"pm.test(\"User ${expectedNames} should be in the response \" + expectedNames, function() {",
									"    pm.expect(firstNames).to.eql(expectedNames);",
									"});",
									"",
									"// ============================",
									"",
									"// set new userId",
									"",
									"pm.environment.set(\"user_id\",jsonData.results[0].id)",
									"pm.environment.set(\"user_id2\",jsonData.results[1].id)",
									"pm.environment.set(\"user_id3\",jsonData.results[2].id)",
									"pm.environment.set(\"user_id4\",jsonData.results[3].id)",
									"pm.environment.set(\"user_id5\",jsonData.results[4].id)",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "df448e0a-72ba-4ecf-84ac-f21512ae15e8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4c9fcb45-dd35-48ab-b3ed-af09c3b57cc6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/?delta_start={{timestamp}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								""
							],
							"query": [
								{
									"key": "deactivated",
									"value": "1",
									"description": "Filter users by active status - 0 for active users, 1 for deactivated users",
									"disabled": true
								},
								{
									"key": "delta_end",
									"value": "{{conversation_delta_end}}",
									"description": "Filters items modified on or before the given date.             Example: `2021-12-31T23:59:59Z`",
									"disabled": true
								},
								{
									"key": "delta_start",
									"value": "2023-03-28",
									"description": "Filters items modified on or after the given date.             Example: `2020-01-01T00:00:00Z`",
									"disabled": true
								},
								{
									"key": "employee_id",
									"value": "123,2133",
									"description": "Filter users by employee ID",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "hr",
									"description": "Filter users by locale",
									"disabled": true
								},
								{
									"key": "manager",
									"value": "<integer>",
									"description": "Filter users by manager ID",
									"disabled": true
								},
								{
									"key": "{{user_id3}}",
									"value": "",
									"disabled": true
								},
								{
									"key": "{{userDepartment_name3}}",
									"value": "",
									"disabled": true
								},
								{
									"key": "{{userDepartment_name4}}",
									"value": "",
									"disabled": true
								},
								{
									"key": "{{userDepartment_name5}}",
									"value": "",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "-delta_start",
									"disabled": true
								},
								{
									"key": "delta_start",
									"value": "{{timestamp}}"
								}
							]
						},
						"description": "Returns a list of users."
					},
					"response": [
						{
							"id": "f5bed188-9698-4945-a714-6a5216891b82",
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/users/?deactivated=1&delta_end=<dateTime>&delta_start=<dateTime>&department=<string>&employee_id=<string>&locale=hr&manager=<integer>&page=<integer>&size=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										""
									],
									"query": [
										{
											"description": "Filter users by active status - 0 for active users, 1 for deactivated users",
											"key": "deactivated",
											"value": "1"
										},
										{
											"description": "Filters items modified on or before the given date.             Example: `2021-12-31T23:59:59Z`",
											"key": "delta_end",
											"value": "<dateTime>"
										},
										{
											"description": "Filters items modified on or after the given date.             Example: `2020-01-01T00:00:00Z`",
											"key": "delta_start",
											"value": "<dateTime>"
										},
										{
											"description": "Filter users by department name",
											"key": "department",
											"value": "<string>"
										},
										{
											"description": "Filter users by employee ID",
											"key": "employee_id",
											"value": "<string>"
										},
										{
											"description": "Filter users by locale",
											"key": "locale",
											"value": "hr"
										},
										{
											"description": "Filter users by manager ID",
											"key": "manager",
											"value": "<integer>"
										},
										{
											"description": "Page number to return",
											"key": "page",
											"value": "<integer>"
										},
										{
											"description": "Number of items to return per page",
											"key": "size",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"more\": \"<boolean>\",\n  \"nextUrl\": \"<string>\",\n  \"results\": [\n    {\n      \"about\": \"<string>\",\n      \"attributes\": {\n        \"est2\": \"<string>\"\n      },\n      \"created_on\": \"<dateTime>\",\n      \"custom_values\": {\n        \"occaecat_e3\": \"<string>\",\n        \"veniam_d2\": \"<string>\"\n      },\n      \"deactivated_on\": \"<dateTime>\",\n      \"deactivation_date\": \"<date>\",\n      \"department\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"email\": \"<email>\",\n      \"employee_id\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"is_active\": \"<boolean>\",\n      \"is_admin\": \"<boolean>\",\n      \"is_goalmaster\": \"<boolean>\",\n      \"is_group_admin\": \"<boolean>\",\n      \"is_super_admin\": \"<boolean>\",\n      \"last_name\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"manager\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"modified_on\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"preferred_name\": \"<string>\",\n      \"title\": \"<string>\",\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"about\": \"<string>\",\n      \"attributes\": {\n        \"eiusmod54\": \"<string>\"\n      },\n      \"created_on\": \"<dateTime>\",\n      \"custom_values\": {\n        \"in_d60\": \"<string>\"\n      },\n      \"deactivated_on\": \"<dateTime>\",\n      \"deactivation_date\": \"<date>\",\n      \"department\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"email\": \"<email>\",\n      \"employee_id\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"is_active\": \"<boolean>\",\n      \"is_admin\": \"<boolean>\",\n      \"is_goalmaster\": \"<boolean>\",\n      \"is_group_admin\": \"<boolean>\",\n      \"is_super_admin\": \"<boolean>\",\n      \"last_name\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"manager\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"uuid\": \"<uuid>\"\n      },\n      \"modified_on\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"preferred_name\": \"<string>\",\n      \"title\": \"<string>\",\n      \"uuid\": \"<uuid>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Update user roles",
					"id": "c22a9872-495e-4de1-8f90-7feabbcfb656",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"roles\": [\n    {\n      \"admin_since\": null,\n      \"user_id\": \"{{user_id3}}\",\n      \"role\": \"superadmin\",\n      \"departments\": [],\n      \"admin_groups\":[]\n    }\n    \n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/v1/users/roles/",
						"description": "Returns a list of updated users.\n            <strong>This endpoint is only available to users with the super admin role.</strong>"
					},
					"response": [
						{
							"id": "0c3b2950-4bec-4975-81bc-db7e66a9508f",
							"name": "Successful response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roles\": [\n    {\n      \"identifier\": \"<uuid>\",\n      \"role\": \"groupadmin\",\n      \"departments\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"admin_groups\": [\n        \"<integer>\",\n        \"<integer>\"\n      ]\n    },\n    {\n      \"identifier\": \"<uuid>\",\n      \"role\": \"none\",\n      \"departments\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"admin_groups\": [\n        \"<integer>\",\n        \"<integer>\"\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v1/users/roles/"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"results\": [\n    {\n      \"admin_since\": \"<float>\",\n      \"id\": \"<integer>\",\n      \"managed_admin_groups\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"managed_departments\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"name\": \"<string>\",\n      \"role\": \"none\",\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"admin_since\": \"<float>\",\n      \"id\": \"<integer>\",\n      \"managed_admin_groups\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"managed_departments\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"name\": \"<string>\",\n      \"role\": \"admin\",\n      \"uuid\": \"<uuid>\"\n    }\n  ]\n}"
						},
						{
							"id": "4f425831-d1db-4471-af53-bb7f0c7b6be8",
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roles\": [\n    {\n      \"identifier\": \"<uuid>\",\n      \"role\": \"groupadmin\",\n      \"departments\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"admin_groups\": [\n        \"<integer>\",\n        \"<integer>\"\n      ]\n    },\n    {\n      \"identifier\": \"<uuid>\",\n      \"role\": \"none\",\n      \"departments\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"admin_groups\": [\n        \"<integer>\",\n        \"<integer>\"\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v1/users/roles/"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get a list of admins",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0990149b-9442-4beb-ae3a-4aeda9b792d5",
								"exec": [
									"pm.test(\"User with modifided role should be in the response \" + expectedNames, function() {",
									"   ",
									"var jsonData = pm.response.json();",
									"var results = jsonData.results;",
									"",
									"const firstName = pm.environment.get(\"userFirstName3\");",
									"const LastName = pm.environment.get(\"userLastName3\");",
									"searchName = firstName + \" \" + LastName",
									"",
									"",
									"for (var i = 0; i < results.length; i++) {",
									"    if (results[i].name === searchName) {",
									"        console.log(\"Name found in result:\", results[i].name);",
									"    }",
									"}",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "46d28165-3e66-4f8e-b558-50bf8d997c98",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/roles/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"roles",
								""
							],
							"variable": [
								{
									"id": "a9365682-011f-4b3b-91e1-0b1f15ca2c23",
									"key": "id",
									"value": "<integer>",
									"description": "(Required) The user ID"
								}
							]
						},
						"description": "Returns a list of all users with Admin, Super Admin, or HR Admin privileges.\n            <strong>This endpoint is only available to users with the super admin role.</strong>"
					},
					"response": [
						{
							"id": "cabd27b7-124f-43f0-bd17-8db11666cce3",
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": "{{baseUrl}}/api/v1/users/roles/"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"results\": [\n    {\n      \"admin_since\": \"<float>\",\n      \"id\": \"<integer>\",\n      \"managed_admin_groups\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"managed_departments\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"name\": \"<string>\",\n      \"role\": \"none\",\n      \"uuid\": \"<uuid>\"\n    },\n    {\n      \"admin_since\": \"<float>\",\n      \"id\": \"<integer>\",\n      \"managed_admin_groups\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"managed_departments\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"uuid\": \"<uuid>\"\n        }\n      ],\n      \"name\": \"<string>\",\n      \"role\": \"admin\",\n      \"uuid\": \"<uuid>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Clear the employee_id field for multiple users",
					"id": "c4fb0ed0-004d-4bac-9229-974b79cfdd5f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": {
								"key": "Authorization",
								"value": "{{apiKey}}",
								"in": "header"
							}
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"users\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/v1/users/bulk/employee-ids/clear/",
						"description": "Returns the number of updated users or a list of errors."
					},
					"response": [
						{
							"id": "d845aa28-1a05-491c-acd6-15e0a325eae4",
							"name": "Successful response",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"users\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v1/users/bulk/employee-ids/clear/"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"updated_count\": \"<integer>\"\n}"
						}
					]
				}
			],
			"id": "037fc87b-2dc9-4ce5-8074-960c5b437c99",
			"auth": {
				"type": "apikey",
				"apikey": {
					"value": "{{Authorization}}",
					"key": "Authorization"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "38365c13-e471-45f9-826c-6427e411b018",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e00d579e-4e0e-4374-ab1a-58c5431ab7d9",
						"type": "text/javascript",
						"exec": [
							"// Test error handling by sending a request to a non-existent endpoint",
							"",
							"pm.sendRequest({",
							"    url: \"http://rainforest.betterworks.com/api/v1/usersss\",",
							"    method: \"GET\",",
							"    header: {",
							"    Authorization : pm.environment.get(\"Authorization\")",
							"    }",
							"    ",
							"}, function (err, response) {",
							"    pm.test(\"Error handling: status code is 404\", function () {",
							"        pm.expect(response).to.have.status(404);",
							"    });",
							"});",
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": {
			"value": "{{Authorization}}",
			"key": "Authorization"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "1ae6f8c7-6dc9-4104-9498-8316e7b44a42",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "b265db3a-bb97-459e-8c97-3698422bae43",
				"type": "text/javascript",
				"exec": [
					"",
					"// Test the response code",
					"pm.test(\"Verify if Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"",
					"// Test the content type",
					"pm.test(\"Verify if Content type is JSON\", function () {",
					"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
					"});",
					"",
					"// Test authentication by sending a request without credentials",
					"pm.sendRequest({",
					"    url: pm.request.url,",
					"    method: \"GET\"",
					"}, function (err, response) {",
					"    pm.test(\"Verify if Authentication: status code is 401 if Auth token is not provided\", function () {",
					"        pm.expect(response).to.have.status(401);",
					"    });",
					"});",
					"",
					"// Test authorization by sending credentials of non admin user",
					"pm.sendRequest({",
					"    url: pm.request.url,",
					"    method: \"GET\",",
					"    header: {",
					"    Authorization : pm.environment.get(\"Manager_Auth\")",
					"    }",
					"}, function (err, response) {",
					"    pm.test(\"Verify Authorization for Manager: status code is 403 in case of non-admin user's id is passed\", function () {",
					"        pm.expect(response).to.have.status(403);",
					"    });",
					"});",
					"",
					"pm.sendRequest({",
					"    url: pm.request.url,",
					"    method: \"GET\",",
					"    header: {",
					"    Authorization : pm.environment.get(\"non_Manager_Auth\")",
					"    }",
					"}, function (err, response) {",
					"    pm.test(\"Verify Authorization for non-Manager: status code is 403 in case of non-admin user's id is passed\", function () {",
					"        pm.expect(response).to.have.status(403);",
					"    });",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"id": "b0234078-55e3-40e0-834c-5ae843ebb567",
			"key": "userId",
			"value": ""
		},
		{
			"id": "257de089-7bb7-4310-b60a-84de821c2dbd",
			"key": "userFirstName",
			"value": ""
		},
		{
			"id": "c8c41908-5ea7-4d75-96ab-ea9d99d71c14",
			"key": "userSecondName",
			"value": ""
		},
		{
			"id": "818b5f5f-2213-4dcc-8239-3cbf4473e6a1",
			"key": "feedback_template_id",
			"value": ""
		},
		{
			"id": "059244af-74ec-4f47-9cfb-15d4be59ff64",
			"key": "feedback_for_user",
			"value": ""
		},
		{
			"id": "740bc86d-ec54-4d30-9688-26a03b0d2de1",
			"key": "feedback_requested_by",
			"value": ""
		},
		{
			"id": "9d52b251-ab1b-489d-9797-805f6446d286",
			"key": "user_id",
			"value": ""
		},
		{
			"id": "8cf24122-4315-4f2b-a93a-f911042d4bc8",
			"key": "user_id2",
			"value": ""
		},
		{
			"id": "f2544d89-1803-4a10-979a-ef170789789c",
			"key": "user_id3",
			"value": ""
		},
		{
			"id": "282fd851-f6b0-4009-8807-a2fb4d2d13a9",
			"key": "user_id4",
			"value": ""
		},
		{
			"id": "6292fbc0-125a-4080-bc72-6b81a7972c9b",
			"key": "user_id5",
			"value": ""
		},
		{
			"id": "385ae26b-5e88-41ef-81a1-52265cb5b134",
			"key": "uuid",
			"value": ""
		}
	]
}